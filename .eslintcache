[{"C:\\Users\\Maciej\\Desktop\\front\\src\\index.tsx":"1","C:\\Users\\Maciej\\Desktop\\front\\src\\app.tsx":"2","C:\\Users\\Maciej\\Desktop\\front\\src\\context\\UserContext.tsx":"3","C:\\Users\\Maciej\\Desktop\\front\\src\\PrivateRoute.tsx":"4","C:\\Users\\Maciej\\Desktop\\front\\src\\router.tsx":"5","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\lists\\CompanyList.tsx":"6","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\forms\\LoginForm.tsx":"7","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\forms\\RegisterForm.tsx":"8","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\other\\Spinner.tsx":"9","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\NotFoundPage.tsx":"10","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\Home.tsx":"11","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\AccountActivated.tsx":"12","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\Register.tsx":"13","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\Login.tsx":"14","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\RegisterConfirm.tsx":"15","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\Dashboard.tsx":"16","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\AddNewOffer.tsx":"17","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\jobOffers\\OfferDetails.tsx":"18","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\CompleteProfile.tsx":"19","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\jobOffers\\SingleOffer.tsx":"20","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\CompanyProfileDetails.tsx":"21","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\PublicProfile.tsx":"22","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\CompanyProfiles.tsx":"23","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\layout\\Layout.tsx":"24","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\layout\\TopHeader.tsx":"25","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\JobOffer.tsx":"26","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\JobOfferList.tsx":"27","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\NewOfferForm.tsx":"28","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\UpdateOfferForm.tsx":"29","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\CompanyProfileForm.tsx":"30","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\UpdateProfileForm.tsx":"31","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\userInfo\\UserInfo.tsx":"32","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\profile\\ProfileData.tsx":"33","C:\\Users\\Maciej\\Desktop\\front\\src\\hooks\\useQuery.tsx":"34","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\other\\Notification.tsx":"35","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\tables\\DashboardOfferTable.tsx":"36","C:\\Users\\Maciej\\Desktop\\front\\src\\hooks\\createQueryString.tsx":"37","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\Filters.tsx":"38","C:\\Users\\Maciej\\Desktop\\front\\src\\hooks\\useOfferQuery.tsx":"39","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\pricing\\Pricing.tsx":"40","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\pricing\\PricingSecondStep.tsx":"41","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\pricing\\PricingFirstStep.tsx":"42","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\pricing\\PricingThirdStep.tsx":"43","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\profile\\CompanyProfileDetailed.tsx":"44"},{"size":151,"mtime":1612611329562,"results":"45","hashOfConfig":"46"},{"size":511,"mtime":1612642657118,"results":"47","hashOfConfig":"46"},{"size":3950,"mtime":1612611378165,"results":"48","hashOfConfig":"46"},{"size":407,"mtime":1612172965048,"results":"49","hashOfConfig":"46"},{"size":2498,"mtime":1613089666286,"results":"50","hashOfConfig":"46"},{"size":2177,"mtime":1613317244345,"results":"51","hashOfConfig":"46"},{"size":1982,"mtime":1612535771419,"results":"52","hashOfConfig":"46"},{"size":2184,"mtime":1612535311979,"results":"53","hashOfConfig":"46"},{"size":236,"mtime":1612373976035,"results":"54","hashOfConfig":"46"},{"size":264,"mtime":1612376914773,"results":"55","hashOfConfig":"46"},{"size":3647,"mtime":1613084212521,"results":"56","hashOfConfig":"46"},{"size":1229,"mtime":1612385925223,"results":"57","hashOfConfig":"46"},{"size":487,"mtime":1612376914821,"results":"58","hashOfConfig":"46"},{"size":470,"mtime":1612535058981,"results":"59","hashOfConfig":"46"},{"size":470,"mtime":1612376911471,"results":"60","hashOfConfig":"46"},{"size":4812,"mtime":1613089684142,"results":"61","hashOfConfig":"46"},{"size":663,"mtime":1613049731754,"results":"62","hashOfConfig":"46"},{"size":872,"mtime":1612611378212,"results":"63","hashOfConfig":"46"},{"size":725,"mtime":1612377850914,"results":"64","hashOfConfig":"46"},{"size":876,"mtime":1613048780515,"results":"65","hashOfConfig":"46"},{"size":832,"mtime":1612385360451,"results":"66","hashOfConfig":"46"},{"size":492,"mtime":1613087315068,"results":"67","hashOfConfig":"46"},{"size":1247,"mtime":1612385360451,"results":"68","hashOfConfig":"46"},{"size":1101,"mtime":1612620902988,"results":"69","hashOfConfig":"46"},{"size":1721,"mtime":1613051791020,"results":"70","hashOfConfig":"46"},{"size":2339,"mtime":1612623241865,"results":"71","hashOfConfig":"46"},{"size":3698,"mtime":1613084204589,"results":"72","hashOfConfig":"46"},{"size":3364,"mtime":1613050241081,"results":"73","hashOfConfig":"46"},{"size":3730,"mtime":1613050517479,"results":"74","hashOfConfig":"46"},{"size":4355,"mtime":1613090258780,"results":"75","hashOfConfig":"46"},{"size":3136,"mtime":1612539837958,"results":"76","hashOfConfig":"46"},{"size":1411,"mtime":1612382364410,"results":"77","hashOfConfig":"46"},{"size":1103,"mtime":1612379524241,"results":"78","hashOfConfig":"46"},{"size":893,"mtime":1612544103526,"results":"79","hashOfConfig":"46"},{"size":198,"mtime":1612523358288,"results":"80","hashOfConfig":"46"},{"size":4117,"mtime":1613086445392,"results":"81","hashOfConfig":"46"},{"size":239,"mtime":1612632366272,"results":"82","hashOfConfig":"46"},{"size":2197,"mtime":1612642467527,"results":"83","hashOfConfig":"46"},{"size":1841,"mtime":1612994286739,"results":"84","hashOfConfig":"46"},{"size":2462,"mtime":1613086520380,"results":"85","hashOfConfig":"46"},{"size":301,"mtime":1613058020425,"results":"86","hashOfConfig":"46"},{"size":2556,"mtime":1613086540576,"results":"87","hashOfConfig":"46"},{"size":289,"mtime":1613058020398,"results":"88","hashOfConfig":"46"},{"size":1006,"mtime":1613089135760,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"wlm3l3",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"92"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"92"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"92"},"C:\\Users\\Maciej\\Desktop\\front\\src\\index.tsx",[],["198","199"],"C:\\Users\\Maciej\\Desktop\\front\\src\\app.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\context\\UserContext.tsx",["200","201"],"import { FunctionComponent, useEffect, useState, createContext, Dispatch, SetStateAction } from 'react';\r\nimport { notification } from 'antd';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport jwt from 'jsonwebtoken';\r\nimport { IUser } from '../types/userTypes';\r\n\r\ninterface IUserContext {\r\n    loadingUser: boolean;\r\n    user?: IUser;\r\n    login: ({ email, password, roleName }: { email: string; password: string; roleName: string }) => void;\r\n    logout: () => void;\r\n    setNewUser: Dispatch<SetStateAction<IUser | undefined>>;\r\n}\r\n\r\nconst initialState = {\r\n    loadingUser: true,\r\n    login: () => {},\r\n    logout: () => {},\r\n    setNewUser: () => {},\r\n};\r\n\r\nconst UserContext = createContext<IUserContext>(initialState);\r\n\r\nconst UserProvider: FunctionComponent = ({ children }) => {\r\n    const history = useHistory();\r\n    const [loadingUser, setLoadingUser] = useState(true);\r\n    const [user, setUser] = useState<IUser | undefined>(undefined);\r\n\r\n    const refreshToken = async (token: string) => {\r\n        try {\r\n            const userData: any = jwt.verify(token, process.env.REACT_APP_JWT_KEY!);\r\n            if (Date.now() + 1000 * 60 * 10 > userData.exp) {\r\n                const { token } = await axios.post('/user/refreshtoken').then((res) => res.data);\r\n                const userData = jwt.verify(token, process.env.REACT_APP_JWT_KEY!);\r\n                const { email: userEmail, userId, location } = userData as IUser;\r\n                setUser({ email: userEmail, token, userId, location });\r\n                Cookies.set('token', token);\r\n            }\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            logout();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = Cookies.get('token') as string;\r\n        if (token) {\r\n            try {\r\n                const userData = jwt.verify(token, process.env.REACT_APP_JWT_KEY!);\r\n                const { email, userId, location } = userData as IUser;\r\n                setUser({ email, token, userId, location });\r\n                setLoadingUser(false);\r\n            } catch (err) {\r\n                if (err.response?.data?.message === 'jwt expired') {\r\n                    notification.error({\r\n                        message: 'Token expired',\r\n                        description: 'Try logging again',\r\n                        placement: 'bottomRight',\r\n                    });\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Something went wrong with token',\r\n                        description: 'Try logging again',\r\n                        placement: 'bottomRight',\r\n                    });\r\n                }\r\n\r\n                logout();\r\n            }\r\n        }\r\n        setLoadingUser(false);\r\n    }, []);\r\n\r\n    const login = async ({ email, password, roleName }: any): Promise<any> => {\r\n        try {\r\n            const { token } = await axios\r\n                .post(`/user/login`, {\r\n                    email,\r\n                    password,\r\n                    roleName,\r\n                })\r\n                .then((response) => response.data);\r\n\r\n            const userData = jwt.verify(token, process.env.REACT_APP_JWT_KEY!);\r\n            const { email: userEmail, userId, location } = userData as IUser;\r\n            setUser({ email: userEmail, token, userId, location });\r\n            Cookies.set('token', token);\r\n            return;\r\n        } catch (err) {\r\n            return err;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        Cookies.remove('token');\r\n        setUser(undefined);\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, loadingUser, login, logout, setNewUser: setUser }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nexport { UserContext, UserProvider };\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\PrivateRoute.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\router.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\lists\\CompanyList.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\forms\\LoginForm.tsx",["202","203","204"],"import React, { useContext, useState } from 'react';\r\nimport { Form, Input, Button, Checkbox, Typography, message, Alert } from 'antd';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LoginForm = () => {\r\n    const history = useHistory();\r\n    const { login } = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const onFinish = async (values: any) => {\r\n        setLoading(true);\r\n        const { email, password } = values;\r\n\r\n        // TODO: find some more elegant way of handling it\r\n        const error: any = await login({ email, password, roleName: 'COMPANY' });\r\n        if (error) {\r\n            setError(error.response.data.errors[0].message);\r\n        }\r\n        history.push('/dashboard');\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <Form layout='vertical' onFinish={onFinish}>\r\n            <Form.Item label='Email' name='email' rules={[{ required: true, message: 'This field cannot be empty!' }]}>\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label='Password'\r\n                name='password'\r\n                rules={[{ required: true, message: 'This field cannot be empty!' }]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            {error && (\r\n                <Alert\r\n                    message='Something went wrong!'\r\n                    description={error}\r\n                    type='error'\r\n                    closable\r\n                    style={{ margin: '15px 0 20px' }}\r\n                    onClose={() => setError('')}\r\n                />\r\n            )}\r\n\r\n            <Form.Item>\r\n                <Button type='primary' htmlType='submit' loading={loading}>\r\n                    Zaloguj\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\forms\\RegisterForm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\other\\Spinner.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\NotFoundPage.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\Home.tsx",["205","206","207","208"],"import { Col, Row, Typography } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport JobOfferList from '../../components/joboffers/JobOfferList';\r\nimport useQuery from '../../hooks/useQuery';\r\nimport { IDashboardOffer } from '../../types/productTypes';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport styled from 'styled-components';\r\nimport Filters from '../../components/joboffers/Filters';\r\nimport useOfferQuery from '../../hooks/useOfferQuery';\r\n\r\nconst StyledContainer = styled.div`\r\n    padding: 20px;\r\n    overflow-y: scroll;\r\n    /* width */\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #888;\r\n        border-radius: 20px;\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: #555;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\ninterface IFilters {\r\n    pensionFrom?: string;\r\n    pensionTo?: string;\r\n    limit: 10;\r\n}\r\ninterface IData {\r\n    offerList: IDashboardOffer[];\r\n    totalCount: number;\r\n}\r\n\r\nconst Home = () => {\r\n    const [page, setPage] = useState(1);\r\n    const [filters, setFilters] = useState<IFilters>({ limit: 10 });\r\n    const { loading, error, offers, hasMore } = useOfferQuery(filters, page);\r\n    // console.log('error', error);\r\n    // const [filterObj, setFilterObj] = useState<IFilters>({ page: 1, limit: 10 });\r\n    // const initialParam = createQueryString({ ...filterObj });\r\n    // const [url, setUrl] = useState<string>(`/offer?${initialParam}`);\r\n\r\n    // const { data, loading, statusCode } = useQuery({ url });\r\n    // const { offerList, totalCount }: IData = data;\r\n    // const [totalList, setTotalList] = useState<IDashboardOffer[]>([]);\r\n\r\n    // useEffect(() => {\r\n    //     if (offerList) {\r\n    //         setTotalList([...totalList, ...offerList]);\r\n    //     }\r\n    // }, [offerList]);\r\n\r\n    // useEffect(() => {\r\n    //     handleFiltering();\r\n    // }, [filterObj]);\r\n\r\n    const handleInfiniteOnLoad = () => {\r\n        if (loading) return;\r\n        // console.log('totalList', totalList);\r\n        // console.log('totalCount', totalCount);\r\n        // if (totalList.length === totalCount) {\r\n        //     setHasMore(false);\r\n        //     return;\r\n        // }\r\n        setPage(page + 1);\r\n        // handleFiltering();\r\n    };\r\n\r\n    // const handleFiltering = () => {\r\n    //     const queryString = createQueryString(filterObj);\r\n    //     setUrl(`/offer?${queryString}`);\r\n    //     console.log('queryString', queryString);\r\n    // };\r\n\r\n    const getFilters = (values: any) => {\r\n        setFilters({ ...values, page: 1, limit: 10 });\r\n    };\r\n\r\n    return (\r\n        <Row style={{ height: '100%' }}>\r\n            <Col\r\n                style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                xs={{ span: 22, offset: 1 }}\r\n                md={{ span: 16, offset: 4 }}\r\n                xl={{ span: 12, offset: 6 }}\r\n            >\r\n                <Typography.Title level={1}>Lista Ofert</Typography.Title>\r\n                <Filters filterFunc={getFilters} />\r\n                <StyledContainer>\r\n                    <InfiniteScroll\r\n                        initialLoad={false}\r\n                        loadMore={handleInfiniteOnLoad}\r\n                        hasMore={!loading && hasMore}\r\n                        useWindow={false}\r\n                    >\r\n                        <JobOfferList offerList={offers} spinnerLoading={loading && hasMore} />\r\n                    </InfiniteScroll>\r\n                </StyledContainer>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\AccountActivated.tsx",["209","210","211","212","213"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, message, Row, Typography } from 'antd';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Spinner from '../../components/other/Spinner';\r\nimport useQuery from '../../hooks/useQuery';\r\n\r\ninterface IData {\r\n    user: any;\r\n}\r\n\r\nconst AccountActivated = () => {\r\n    const { token }: any = useParams();\r\n    const { data, loading, statusCode } = useQuery({ url: `/user/active/${token}` });\r\n    const { user }: IData = data;\r\n\r\n    const renderView = () => {\r\n        if (loading) return <Spinner />;\r\n        if (!user) return <Typography.Title level={2}>Coś poszło nie tak</Typography.Title>;\r\n\r\n        return (\r\n            <>\r\n                <Typography.Title level={2}>Konto zostało aktywowane</Typography.Title>\r\n                <Link to='/login'>\r\n                    <Button type='primary' size='large'>\r\n                        Przejdź do logowania\r\n                    </Button>\r\n                </Link>\r\n            </>\r\n        );\r\n    };\r\n    return (\r\n        <Row>\r\n            <Col md={{ span: 8, offset: 8 }}>{renderView()}</Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default AccountActivated;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\Register.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\Login.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\RegisterConfirm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\Dashboard.tsx",["214","215","216","217"],"import { Button, Col, Empty, Row, Space, Typography } from 'antd';\r\nimport { useContext, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport DashboardOfferTable from '../../components/dashboad/tables/DashboardOfferTable';\r\nimport Spinner from '../../components/other/Spinner';\r\nimport ProfileData from '../../components/dashboad/profile/ProfileData';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { IDashboardOffer } from '../../types/productTypes';\r\nimport { IUserDetails } from '../../types/userTypes';\r\nimport useQuery from '../../hooks/useQuery';\r\nimport { createQueryString } from '../../hooks/createQueryString';\r\nimport CompanyProfileDetailed from '../../components/dashboad/profile/CompanyProfileDetailed';\r\n\r\ninterface IData {\r\n    offerList: IDashboardOffer[];\r\n}\r\ninterface IUser {\r\n    user: IUserDetails;\r\n}\r\n\r\nconst Dashboard = () => {\r\n    const history = useHistory();\r\n    const queryString = createQueryString({ page: 1, limit: 10 });\r\n    const { user: contextUser } = useContext(UserContext);\r\n    const { data, loading: offersLoading, statusCode } = useQuery({\r\n        url: `/offer?userId=${contextUser?.userId}&${queryString}`,\r\n    });\r\n    const { data: userData, loading: userLoading, statusCode: userStatusCode } = useQuery({ url: `/user/current` });\r\n    const { offerList }: IData = data;\r\n    const { user }: IUser = userData;\r\n    useEffect(() => {\r\n        if (!contextUser?.location) {\r\n            history.push('/dashboard/completeyourprofile');\r\n        }\r\n    }, [contextUser]);\r\n\r\n    if (!contextUser) return <div />;\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ margin: '20px 0' }}>\r\n                <Col sm={{ span: 24, offset: 0 }} md={{ span: 22, offset: 1 }} lg={{ span: 20, offset: 2 }}>\r\n                    <ProfileData data={user} />\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* {userLoading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Row style={{ margin: '20px 0' }}>\r\n                    <Col md={{ span: 16, offset: 4 }}>\r\n                        <Typography.Title level={2}>Profil publiczny</Typography.Title>\r\n                        <Button type='primary'>\r\n                            <Link to='#'>Edytuj profil</Link>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            )} */}\r\n\r\n            <Row style={{ margin: '40px 0' }}>\r\n                <Col sm={{ span: 24, offset: 0 }} md={{ span: 22, offset: 1 }} lg={{ span: 20, offset: 2 }}>\r\n                    <Space direction='horizontal' align='baseline'>\r\n                        <Typography.Title level={2}>Profil publiczny</Typography.Title>\r\n                        {!user?.companyPublicProfile ? (\r\n                            <Button type='primary'>\r\n                                <Link to='/dashboard/profilpubliczny'>Dodaj profil publiczny</Link>\r\n                            </Button>\r\n                        ) : (\r\n                            <Button type='default'>\r\n                                <Link to={`/dashboard/profilpubliczny/${user?.companyPublicProfile}`}>\r\n                                    Zaktualizuj profil\r\n                                </Link>\r\n                            </Button>\r\n                        )}\r\n                    </Space>\r\n                    {!user?.companyPublicProfile ? (\r\n                        <div>brak profilu</div>\r\n                    ) : (\r\n                        <CompanyProfileDetailed profileId={user?.companyPublicProfile} />\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row style={{ margin: '40px 0' }}>\r\n                <Col sm={{ span: 24, offset: 0 }} md={{ span: 22, offset: 1 }} lg={{ span: 20, offset: 2 }}>\r\n                    <Space direction='horizontal' align='baseline'>\r\n                        <Typography.Title level={2}>Moje oferty</Typography.Title>\r\n                        <Button type='default'>\r\n                            <Link to='/dashboard/dodajoferte'>Dodaj nową ofertę</Link>\r\n                        </Button>\r\n                    </Space>\r\n                    <div>\r\n                        {offersLoading ? (\r\n                            <Spinner />\r\n                        ) : (\r\n                            <>\r\n                                {offerList?.length === 0 ? (\r\n                                    <Empty description='Brak dodanych ofert' />\r\n                                ) : (\r\n                                    <DashboardOfferTable offerList={offerList} />\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\AddNewOffer.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\jobOffers\\OfferDetails.tsx",["218"],"import { Col, PageHeader, Row } from 'antd';\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport UpdateOfferForm from '../../../components/dashboad/forms/UpdateOfferForm';\r\nimport Spinner from '../../../components/other/Spinner';\r\nimport useQuery from '../../../hooks/useQuery';\r\n\r\ninterface IData {\r\n    offer: any;\r\n}\r\n\r\nconst OfferDetails = () => {\r\n    const params: any = useParams();\r\n    const { data, loading, statusCode } = useQuery({ url: `/offer/${params?.id}` });\r\n    const { offer }: IData = data;\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={{ span: 16, offset: 4 }}>\r\n                <PageHeader onBack={() => window.history.back()} title='Twoja oferta' />\r\n\r\n                {loading ? <Spinner /> : <UpdateOfferForm offer={offer} />}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default OfferDetails;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\CompleteProfile.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\jobOffers\\SingleOffer.tsx",["219"],"import { Col, Row } from 'antd';\r\nimport { useParams } from 'react-router-dom';\r\nimport JobOffer from '../../../components/joboffers/JobOffer';\r\nimport Spinner from '../../../components/other/Spinner';\r\nimport useQuery from '../../../hooks/useQuery';\r\nimport { IDashboardOffer } from '../../../types/productTypes';\r\n\r\ninterface IData {\r\n    offer: IDashboardOffer;\r\n}\r\n\r\nconst SingleOffer = () => {\r\n    const params: any = useParams();\r\n    const { data, loading, statusCode } = useQuery({ url: `/offer/${params?.id}` });\r\n    const { offer }: IData = data;\r\n\r\n    return (\r\n        <Row style={{ marginTop: '2rem' }}>\r\n            <Col xs={{ span: 22, offset: 1 }} md={{ span: 16, offset: 4 }} xl={{ span: 12, offset: 6 }}>\r\n                {loading ? <Spinner /> : <JobOffer offer={offer} />}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default SingleOffer;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\CompanyProfileDetails.tsx",["220","221","222","223","224"],"import { Col, Row } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Spinner from '../../../components/other/Spinner';\r\nimport UserInfo from '../../../components/dashboad/userInfo/UserInfo';\r\nimport useQuery from '../../../hooks/useQuery';\r\n\r\ninterface IData {\r\n    companyProfile: any;\r\n}\r\n\r\nconst CompanyProfileDetails = () => {\r\n    const { profileId }: any = useParams();\r\n    const [url, setUrl] = useState<string>(`/companyProfile/${profileId}`);\r\n    const { data, loading, statusCode } = useQuery({ url });\r\n    const { companyProfile }: IData = data;\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={{ span: 16, offset: 4 }}>{loading ? <Spinner /> : <UserInfo profile={companyProfile} />}</Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CompanyProfileDetails;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\PublicProfile.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\CompanyProfiles.tsx",["225","226","227","228"],"import { Col, Pagination, Row, Typography } from 'antd';\r\nimport { useState } from 'react';\r\nimport CompanyList from '../../../components/lists/CompanyList';\r\nimport Spinner from '../../../components/other/Spinner';\r\nimport useQuery from '../../../hooks/useQuery';\r\nimport { IUserDetails } from '../../../types/userTypes';\r\n\r\ninterface IData {\r\n    companyProfiles: IUserDetails[];\r\n    totalCount: number;\r\n}\r\n\r\nconst CompanyProfiles = () => {\r\n    const [url, setUrl] = useState<string>(`/companyProfile`);\r\n    const { data, loading, statusCode } = useQuery({ url });\r\n    const { companyProfiles, totalCount }: IData = data;\r\n\r\n    const handlePaginationChange = (pageNumber: number, pageSize?: number) => {\r\n        setUrl(`/companyProfile?page=${pageNumber}&limit=${pageSize}`);\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={{ span: 16, offset: 4 }}>\r\n                <Typography.Title level={1}>Profile pracodawców</Typography.Title>\r\n                {loading ? <Spinner /> : <CompanyList companyList={companyProfiles} />}\r\n                <Pagination defaultCurrent={1} pageSize={5} total={totalCount} onChange={handlePaginationChange} />\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CompanyProfiles;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\layout\\Layout.tsx",["229"],"import React, { FunctionComponent, useContext } from 'react';\r\nimport { Layout } from 'antd';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport TopHeader from '../../components/layout/TopHeader';\r\nimport axios from 'axios';\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nconst LayoutHOC: FunctionComponent = ({ children }) => {\r\n    const { loadingUser, user } = useContext(UserContext);\r\n\r\n    axios.defaults.baseURL = 'http://localhost:5000/api';\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + user?.token;\r\n\r\n    if (loadingUser) {\r\n        return <div />;\r\n    }\r\n\r\n    return (\r\n        <Layout style={{ height: '100vh', background: 'none', display: 'flex', flexDirection: 'column' }}>\r\n            <Header style={{ background: 'none' }}>\r\n                <TopHeader />\r\n            </Header>\r\n            <Content style={{ background: 'white', padding: '2rem 0', flexGrow: 1 }}>{children}</Content>\r\n            {/* <Footer style={{ textAlign: 'center', background: 'none' }}>Stopka</Footer> */}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default LayoutHOC;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\layout\\TopHeader.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\JobOffer.tsx",["230"],"import { Button, Image, PageHeader, Space, Tag, Typography } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { IDashboardOffer } from '../../types/productTypes';\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\ninterface IJobOfferProps {\r\n    offer: IDashboardOffer;\r\n}\r\n\r\nconst JobOffer = ({ offer }: IJobOfferProps) => {\r\n    const handleApply = () => {\r\n        // console.log('Apply');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PageHeader onBack={() => window.history.back()} title={'Oferta pracy ' + offer.owner.companyName} />\r\n            <div>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Image\r\n                        src={`https://logo.clearbit.com/${offer.owner.companyUrl}`}\r\n                        style={{ width: '100px', height: '100px' }}\r\n                    />\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        <Title level={3}>{offer.owner.companyName}</Title>\r\n                        <Paragraph>\r\n                            {offer.pensionFrom} - {offer.pensionTo} zł\r\n                        </Paragraph>\r\n                    </div>\r\n                </div>\r\n\r\n                {offer.owner.companyPublicProfile && (\r\n                    <Link to={`/profil/${offer.owner?._id}`}>\r\n                        <Button>Profil pracodawcy</Button>\r\n                    </Link>\r\n                )}\r\n            </div>\r\n            <div>\r\n                <Title level={5}>Wymagane technologie </Title>\r\n                <div>\r\n                    {offer.requiredSkills.map((str) => (\r\n                        <Tag key={str}>{str}</Tag>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ margin: '30px 0' }}>\r\n                <Title level={5}>Opis stanowiska </Title>\r\n                <Paragraph>{offer.jobDescription}</Paragraph>\r\n            </div>\r\n\r\n            <div style={{ margin: '30px 0' }}>\r\n                <Button type='primary' onClick={handleApply}>\r\n                    Aplikuj\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default JobOffer;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\JobOfferList.tsx",["231","232"],"import { Skeleton, Space, Spin, Tag } from 'antd';\r\nimport { List } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\nimport { IDashboardOffer } from '../../types/productTypes';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSpinner = styled.div`\r\n    position: absolute;\r\n    bottom: 40px;\r\n    width: 100%;\r\n    text-align: center;\r\n`;\r\n\r\nconst StyledListItem = styled(List.Item)`\r\n    box-shadow: 0px 0px 16px #dddddd;\r\n    border-radius: 15px;\r\n    padding: 15px;\r\n    margin: 1.75rem 0;\r\n    cursor: pointer;\r\n    transition: transform 0.2s ease-in-out;\r\n\r\n    &:hover {\r\n        transform: scale(1.02);\r\n    }\r\n`;\r\n\r\ninterface IJobOfferListProps {\r\n    offerList: IDashboardOffer[];\r\n    spinnerLoading: boolean;\r\n}\r\n\r\nconst JobOfferList = ({ offerList, spinnerLoading }: IJobOfferListProps) => {\r\n    return (\r\n        <List\r\n            itemLayout='vertical'\r\n            size='large'\r\n            dataSource={offerList}\r\n            renderItem={(item) => (\r\n                <Link to={`/oferta/${item._id}`} key={item._id}>\r\n                    <StyledListItem style={{ margin: '25px 0' }}>\r\n                        <List.Item.Meta\r\n                            avatar={\r\n                                <Avatar\r\n                                    style={{ width: '70px', height: '70px' }}\r\n                                    src={'https://logo.clearbit.com/' + item.owner.companyUrl}\r\n                                />\r\n                            }\r\n                            title={\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                    <div>{item.jobTitle}</div>\r\n                                    <div>\r\n                                        {item.pensionFrom} - {item.pensionTo} PLN\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            description={\r\n                                <>\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <div>\r\n                                            <Space style={{ marginRight: '15px' }}>{item.owner.companyName}</Space>\r\n                                            <Space size={6} direction='horizontal'>\r\n                                                <HomeOutlined />\r\n                                                {item.owner.location}\r\n                                            </Space>\r\n                                        </div>\r\n                                        <div>remote friendly</div>\r\n                                    </div>\r\n                                    {item.owner.shortDescription}\r\n                                </>\r\n                            }\r\n                        />\r\n\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <div>\r\n                                {item.requiredSkills.map((str) => (\r\n                                    <Tag key={str}>{str}</Tag>\r\n                                ))}\r\n                            </div>\r\n                            <div>Oferta dodana: {item.updatedAt}</div>\r\n                        </div>\r\n                    </StyledListItem>\r\n                </Link>\r\n            )}\r\n        >\r\n            <Skeleton loading={spinnerLoading} active>\r\n                <List.Item.Meta />\r\n            </Skeleton>\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default JobOfferList;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\NewOfferForm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\UpdateOfferForm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\CompanyProfileForm.tsx",["233","234"],"import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button, message, Select, Spin } from 'antd';\r\nimport axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Spinner from '../../other/Spinner';\r\n\r\nconst CompanyProfileForm = () => {\r\n    const { profileId }: any = useParams();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [loadingInitial, setLoadingInitial] = useState<boolean>(true);\r\n    const [initialValues, setInitialValues] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (profileId) {\r\n            const getFormValues = async () => {\r\n                setLoadingInitial(true);\r\n                try {\r\n                    const { companyProfile } = await axios.get(`/companyProfile/${profileId}`).then((res) => res.data);\r\n                    const { companyDescription, technologiesUsed } = companyProfile;\r\n                    console.log('companyDescription, technologiesUsed', companyDescription, technologiesUsed);\r\n                    setInitialValues({ companyDescription, technologiesUsed });\r\n                    setLoadingInitial(false);\r\n                } catch (err) {\r\n                    message.error('Coś się nie udało');\r\n                    setLoadingInitial(false);\r\n                }\r\n            };\r\n\r\n            getFormValues();\r\n        }\r\n    }, []);\r\n\r\n    const handleAddNewProfile = async (values: any) => {\r\n        try {\r\n            const { companyDescription, technologiesUsed } = values;\r\n            await axios\r\n                .post(`/companyProfile`, {\r\n                    companyDescription,\r\n                    technologiesUsed,\r\n                })\r\n                .then((response) => response.data);\r\n            setLoading(false);\r\n            message.success('Udało się stworzyć profil');\r\n            history.replace('/dashboard');\r\n        } catch (err) {\r\n            message.error('Coś się nie udało');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleUpdateNewProfile = async (values: any) => {\r\n        try {\r\n            const { companyDescription, technologiesUsed } = values;\r\n            await axios\r\n                .put(`/companyProfile/${profileId}`, {\r\n                    companyDescription,\r\n                    technologiesUsed,\r\n                })\r\n                .then((response) => response.data);\r\n            setLoading(false);\r\n            message.success('Udało się zaktualizować profil');\r\n            history.replace('/dashboard');\r\n        } catch (err) {\r\n            message.error('Coś się nie udało');\r\n            setLoading(false);\r\n        }\r\n    };\r\n    const onFinish = (values: any) => {\r\n        setLoading(true);\r\n        if (profileId) {\r\n            handleUpdateNewProfile(values);\r\n        } else {\r\n            handleAddNewProfile(values);\r\n        }\r\n    };\r\n\r\n    if (loadingInitial) return <Spinner />;\r\n\r\n    return (\r\n        <Form name='basic' layout='vertical' initialValues={initialValues} onFinish={onFinish}>\r\n            <Form.Item label='Narzędzia wykorzystywane w firmie' name='technologiesUsed' rules={[{ required: true }]}>\r\n                <Select mode='tags' placeholder='React, TypeScript, Scrum...' style={{ width: '100%' }}>\r\n                    <Select.Option key={1} value={'JavaScript'}>\r\n                        {'JavaScript'}\r\n                    </Select.Option>\r\n                    <Select.Option key={2} value={'React'}>\r\n                        {'React'}\r\n                    </Select.Option>\r\n                    <Select.Option key={3} value={'TypeScript'}>\r\n                        {'TypeScript'}\r\n                    </Select.Option>\r\n                    <Select.Option key={4} value={'Node'}>\r\n                        {'Node'}\r\n                    </Select.Option>\r\n                </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name='companyDescription' label='Opis firmy' rules={[{ required: true }]}>\r\n                <Input.TextArea placeholder='Opis firmy' />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type='primary' htmlType='submit' loading={loading}>\r\n                    Stwórz profil\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default CompanyProfileForm;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\UpdateProfileForm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\userInfo\\UserInfo.tsx",["235","236"],"import { PageHeader, Space, Tag, Typography } from 'antd';\r\nimport { FacebookFilled, LinkedinFilled } from '@ant-design/icons';\r\n\r\ninterface IUserInfoProps {\r\n    profile: any;\r\n}\r\nconst UserInfo = ({ profile }: IUserInfoProps) => {\r\n    return (\r\n        <>\r\n            <PageHeader onBack={() => window.history.back()} title='Profil firmy' />\r\n            <Typography.Title level={4}>{profile?.companyName}</Typography.Title>\r\n            <Typography.Paragraph>{profile?.companyDescription}</Typography.Paragraph>\r\n            <Typography.Text type='secondary'>{profile?.createdAt}</Typography.Text>\r\n            <br />\r\n            <br />\r\n\r\n            <Typography.Title level={5}>Używane technologie</Typography.Title>\r\n            {profile?.technologiesUsed?.map((item: any) => (\r\n                <Tag key={item}>{item}</Tag>\r\n            ))}\r\n            <br />\r\n            <br />\r\n            <Space size={10}>\r\n                {profile?.socialMedia?.linkedIn && (\r\n                    <a href='#'>\r\n                        <FacebookFilled style={{ fontSize: '40px' }} />\r\n                    </a>\r\n                )}\r\n                {profile?.socialMedia?.facebook && (\r\n                    <a href='#'>\r\n                        <LinkedinFilled style={{ fontSize: '40px' }} />\r\n                    </a>\r\n                )}\r\n            </Space>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserInfo;\r\n",["237","238"],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\profile\\ProfileData.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\hooks\\useQuery.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\other\\Notification.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\tables\\DashboardOfferTable.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\hooks\\createQueryString.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\Filters.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\hooks\\useOfferQuery.tsx",["239"],"import axios, { Canceler } from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { IDashboardOffer } from '../types/productTypes';\r\n\r\n// TODO:\r\n// 1. jak zrobić, by nie ładował po 2-3 razy jak ktoś szybko scrolluje.\r\n// 2. Jak zrobić by anulowało z cancel token i nie anulowało na rzecz kolejnych page, których nie ma.\r\n\r\nexport default function useOfferQuery(filters: any, page: number) {\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [error, setError] = useState<boolean>(false);\r\n    const [offers, setOffers] = useState<IDashboardOffer[]>([]);\r\n    const [hasMore, setHasMore] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        setOffers([]);\r\n    }, [filters]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setError(false);\r\n        // let cancel: Canceler;\r\n        axios({\r\n            method: 'GET',\r\n            url: `/offer`,\r\n            params: {\r\n                ...filters,\r\n                page,\r\n            },\r\n            // cancelToken: new axios.CancelToken((c: Canceler) => (cancel = c)),\r\n        })\r\n            .then((res) => {\r\n                setOffers((prevState) => {\r\n                    const newOffers = [...prevState, ...res.data.offerList];\r\n                    if (res.data.totalCount === newOffers.length) {\r\n                        setHasMore(false);\r\n                    } else {\r\n                        setHasMore(true);\r\n                    }\r\n                    return newOffers;\r\n                });\r\n\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                // if (axios.isCancel(err)) return;\r\n                setError(true);\r\n            });\r\n\r\n        return;\r\n    }, [filters, page]);\r\n\r\n    return { loading, error, offers, hasMore };\r\n}\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\pricing\\Pricing.tsx",["240"],"import { Button, Col, message, Row, Steps } from 'antd';\r\nimport { useState } from 'react';\r\nimport PricingFirstStep from './PricingFirstStep';\r\nimport PricingSecondStep from './PricingSecondStep';\r\nimport PricingThirdStep from './PricingThirdStep';\r\nconst { Step } = Steps;\r\n\r\nexport enum offerEnum {\r\n    test = 'TEST',\r\n    basic = 'PODSTAWOWY',\r\n    premium = 'PREMIUM',\r\n}\r\n\r\nconst Pricing = () => {\r\n    const [current, setCurrent] = useState(0);\r\n    const [selectedOffer, setSelectedOffer] = useState<offerEnum>();\r\n\r\n    const next = () => {\r\n        setCurrent(current + 1);\r\n    };\r\n\r\n    const prev = () => {\r\n        setCurrent(current - 1);\r\n    };\r\n\r\n    const steps = [\r\n        {\r\n            title: 'Pakiet',\r\n            content: <PricingFirstStep next={next} setSelectedOffer={setSelectedOffer} />,\r\n        },\r\n        {\r\n            title: 'Formularz',\r\n            content: <PricingSecondStep />,\r\n        },\r\n        {\r\n            title: 'Podsumowanie',\r\n            content: <PricingThirdStep />,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Row style={{ margin: '40px 0' }}>\r\n            <Col\r\n                sm={{ span: 24, offset: 0 }}\r\n                md={{ span: 22, offset: 1 }}\r\n                lg={{ span: 16, offset: 4 }}\r\n                xl={{ span: 10, offset: 6 }}\r\n            >\r\n                <Steps current={current}>\r\n                    {steps.map((item) => (\r\n                        <Step key={item.title} title={item.title} />\r\n                    ))}\r\n                </Steps>\r\n\r\n                <div style={{ margin: '40px 0' }}>{steps[current].content}</div>\r\n                <div className='steps-action'>\r\n                    {current > 0 && (\r\n                        <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                            Previous\r\n                        </Button>\r\n                    )}\r\n                    {/* {current < steps.length - 1 && (\r\n                        <Button type='primary' onClick={() => next()}>\r\n                            Next\r\n                        </Button>\r\n                    )} */}\r\n                    {current === steps.length - 1 && (\r\n                        <Button type='primary' onClick={() => message.success('Processing complete!')}>\r\n                            Done\r\n                        </Button>\r\n                    )}\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Pricing;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\pricing\\PricingSecondStep.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\pricing\\PricingFirstStep.tsx",["241","242"],"import { Button, Col, Row, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport enum offerEnum {\r\n    test = 'TEST',\r\n    basic = 'PODSTAWOWY',\r\n    premium = 'PREMIUM',\r\n}\r\n\r\nconst StyledContainer = styled.div`\r\n    display: flex;\r\n`;\r\nconst StyledOption = styled.div`\r\n    flex-grow: 1;\r\n    margin: 0 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\nconst StyledOptionContent = styled.div`\r\n    flex: 1;\r\n    padding: 30px 10px;\r\n`;\r\n\r\ninterface IFirstStepProps {\r\n    next: Function;\r\n    setSelectedOffer: Function;\r\n}\r\n\r\ninterface ISingleOption {\r\n    title: string;\r\n    price: string;\r\n    includes: string[];\r\n    next: offerEnum;\r\n}\r\n\r\nconst possibleOptions: ISingleOption[] = [\r\n    {\r\n        title: 'Testowy',\r\n        price: 'Darmo',\r\n        includes: ['Oferta ważna 30 dni'],\r\n        next: offerEnum.test,\r\n    },\r\n    {\r\n        title: 'Podstawowy',\r\n        price: '50 zł',\r\n        includes: ['Oferta ważna 30 dni', 'możliwość odnawiania oferty'],\r\n        next: offerEnum.basic,\r\n    },\r\n    {\r\n        title: 'Premium',\r\n        price: '100 zł',\r\n        includes: ['Oferta ważna 30 dni', 'możliwość odnawiania oferty', 'możliwość edycji oferty'],\r\n        next: offerEnum.premium,\r\n    },\r\n];\r\n\r\nconst PricingFirstStep = ({ next, setSelectedOffer }: IFirstStepProps) => {\r\n    const handleNext = (type: offerEnum) => {\r\n        setSelectedOffer(type);\r\n        next();\r\n    };\r\n\r\n    return (\r\n        <StyledContainer>\r\n            {possibleOptions.map((option) => (\r\n                <StyledOption key={option.title}>\r\n                    <Typography.Title level={1} style={{ margin: 0 }}>\r\n                        {option.title}\r\n                    </Typography.Title>\r\n                    <Typography.Title level={4} style={{ margin: 0 }}>\r\n                        {option.price}\r\n                    </Typography.Title>\r\n                    <StyledOptionContent>\r\n                        {option.includes.map((str, index) => (\r\n                            <div key={index} style={{ margin: '4px 0', textAlign: 'center' }}>\r\n                                {str}\r\n                            </div>\r\n                        ))}\r\n                    </StyledOptionContent>\r\n                    <Button type='primary' onClick={() => handleNext(option.next)}>\r\n                        przejdź dalej\r\n                    </Button>\r\n                </StyledOption>\r\n            ))}\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default PricingFirstStep;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\pricing\\PricingThirdStep.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\profile\\CompanyProfileDetailed.tsx",["243","244"],"import { Tag, Typography } from 'antd';\r\nimport { useEffect } from 'react';\r\nimport useQuery from '../../../hooks/useQuery';\r\nimport Spinner from '../../other/Spinner';\r\n\r\ninterface ICompanyProfileDetailed {\r\n    profileId: string;\r\n}\r\n\r\nconst CompanyProfileDetailed = ({ profileId }: ICompanyProfileDetailed) => {\r\n    const { data, loading, statusCode } = useQuery({\r\n        url: `/companyProfile/${profileId}`,\r\n    });\r\n\r\n    const { companyProfile }: any = data;\r\n\r\n    if (loading) return <Spinner />;\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title level={4}>Szczegółowy opis firmy</Typography.Title>\r\n            <Typography.Paragraph>{companyProfile.companyDescription}</Typography.Paragraph>\r\n            <Typography.Title level={4}>Zadeklarowane technologie</Typography.Title>\r\n            {companyProfile.technologiesUsed.map((str: string) => (\r\n                <Tag key={str}>{str}</Tag>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompanyProfileDetailed;\r\n",{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":31,"column":11,"nodeType":"251","messageId":"252","endLine":31,"endColumn":23},{"ruleId":"253","severity":1,"message":"254","line":74,"column":8,"nodeType":"255","endLine":74,"endColumn":10,"suggestions":"256"},{"ruleId":"249","severity":1,"message":"257","line":2,"column":31,"nodeType":"251","messageId":"252","endLine":2,"endColumn":39},{"ruleId":"249","severity":1,"message":"258","line":2,"column":41,"nodeType":"251","messageId":"252","endLine":2,"endColumn":51},{"ruleId":"249","severity":1,"message":"259","line":2,"column":53,"nodeType":"251","messageId":"252","endLine":2,"endColumn":60},{"ruleId":"249","severity":1,"message":"260","line":2,"column":10,"nodeType":"251","messageId":"252","endLine":2,"endColumn":19},{"ruleId":"249","severity":1,"message":"261","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":16},{"ruleId":"249","severity":1,"message":"262","line":37,"column":11,"nodeType":"251","messageId":"252","endLine":37,"endColumn":16},{"ruleId":"249","severity":1,"message":"263","line":45,"column":22,"nodeType":"251","messageId":"252","endLine":45,"endColumn":27},{"ruleId":"249","severity":1,"message":"260","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"264","line":1,"column":28,"nodeType":"251","messageId":"252","endLine":1,"endColumn":36},{"ruleId":"249","severity":1,"message":"259","line":2,"column":23,"nodeType":"251","messageId":"252","endLine":2,"endColumn":30},{"ruleId":"249","severity":1,"message":"265","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":13},{"ruleId":"249","severity":1,"message":"266","line":14,"column":28,"nodeType":"251","messageId":"252","endLine":14,"endColumn":38},{"ruleId":"249","severity":1,"message":"266","line":25,"column":43,"nodeType":"251","messageId":"252","endLine":25,"endColumn":53},{"ruleId":"249","severity":1,"message":"267","line":28,"column":38,"nodeType":"251","messageId":"252","endLine":28,"endColumn":49},{"ruleId":"249","severity":1,"message":"268","line":28,"column":63,"nodeType":"251","messageId":"252","endLine":28,"endColumn":77},{"ruleId":"253","severity":1,"message":"269","line":35,"column":8,"nodeType":"255","endLine":35,"endColumn":21,"suggestions":"270"},{"ruleId":"249","severity":1,"message":"266","line":14,"column":28,"nodeType":"251","messageId":"252","endLine":14,"endColumn":38},{"ruleId":"249","severity":1,"message":"266","line":14,"column":28,"nodeType":"251","messageId":"252","endLine":14,"endColumn":38},{"ruleId":"249","severity":1,"message":"259","line":1,"column":15,"nodeType":"251","messageId":"252","endLine":1,"endColumn":22},{"ruleId":"249","severity":1,"message":"265","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":13},{"ruleId":"249","severity":1,"message":"260","line":3,"column":17,"nodeType":"251","messageId":"252","endLine":3,"endColumn":26},{"ruleId":"249","severity":1,"message":"271","line":15,"column":17,"nodeType":"251","messageId":"252","endLine":15,"endColumn":23},{"ruleId":"249","severity":1,"message":"266","line":16,"column":28,"nodeType":"251","messageId":"252","endLine":16,"endColumn":38},{"ruleId":"249","severity":1,"message":"259","line":1,"column":15,"nodeType":"251","messageId":"252","endLine":1,"endColumn":22},{"ruleId":"249","severity":1,"message":"265","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":13},{"ruleId":"249","severity":1,"message":"260","line":3,"column":17,"nodeType":"251","messageId":"252","endLine":3,"endColumn":26},{"ruleId":"249","severity":1,"message":"266","line":16,"column":28,"nodeType":"251","messageId":"252","endLine":16,"endColumn":38},{"ruleId":"249","severity":1,"message":"272","line":7,"column":17,"nodeType":"251","messageId":"252","endLine":7,"endColumn":23},{"ruleId":"249","severity":1,"message":"273","line":1,"column":37,"nodeType":"251","messageId":"252","endLine":1,"endColumn":42},{"ruleId":"249","severity":1,"message":"274","line":1,"column":27,"nodeType":"251","messageId":"252","endLine":1,"endColumn":31},{"ruleId":"249","severity":1,"message":"275","line":10,"column":7,"nodeType":"251","messageId":"252","endLine":10,"endColumn":20},{"ruleId":"249","severity":1,"message":"274","line":2,"column":48,"nodeType":"251","messageId":"252","endLine":2,"endColumn":52},{"ruleId":"253","severity":1,"message":"276","line":32,"column":8,"nodeType":"255","endLine":32,"endColumn":10,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":25,"column":21,"nodeType":"280","endLine":25,"endColumn":33},{"ruleId":"278","severity":1,"message":"279","line":30,"column":21,"nodeType":"280","endLine":30,"endColumn":33},{"ruleId":"245","replacedBy":"281"},{"ruleId":"247","replacedBy":"282"},{"ruleId":"249","severity":1,"message":"283","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"249","severity":1,"message":"284","line":16,"column":12,"nodeType":"251","messageId":"252","endLine":16,"endColumn":25},{"ruleId":"249","severity":1,"message":"285","line":1,"column":18,"nodeType":"251","messageId":"252","endLine":1,"endColumn":21},{"ruleId":"249","severity":1,"message":"286","line":1,"column":23,"nodeType":"251","messageId":"252","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"260","line":2,"column":10,"nodeType":"251","messageId":"252","endLine":2,"endColumn":19},{"ruleId":"249","severity":1,"message":"266","line":11,"column":28,"nodeType":"251","messageId":"252","endLine":11,"endColumn":38},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"@typescript-eslint/no-unused-vars","'refreshToken' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logout'. Either include it or remove the dependency array.","ArrayExpression",["289"],"'Checkbox' is defined but never used.","'Typography' is defined but never used.","'message' is defined but never used.","'useEffect' is defined but never used.","'useQuery' is defined but never used.","'IData' is defined but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'statusCode' is assigned a value but never used.","'userLoading' is assigned a value but never used.","'userStatusCode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["290"],"'setUrl' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Space' is defined but never used.","'Spin' is defined but never used.","'StyledSpinner' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'profileId'. Either include it or remove the dependency array.",["291"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["287"],["288"],"'Canceler' is defined but never used.","'selectedOffer' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},"Update the dependencies array to be: [logout]",{"range":"298","text":"299"},"Update the dependencies array to be: [contextUser, history]",{"range":"300","text":"301"},"Update the dependencies array to be: [profileId]",{"range":"302","text":"303"},[2839,2841],"[logout]",[1555,1568],"[contextUser, history]",[1400,1402],"[profileId]"]