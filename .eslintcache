[{"C:\\Users\\Maciej\\Desktop\\front\\src\\index.tsx":"1","C:\\Users\\Maciej\\Desktop\\front\\src\\app.tsx":"2","C:\\Users\\Maciej\\Desktop\\front\\src\\context\\UserContext.tsx":"3","C:\\Users\\Maciej\\Desktop\\front\\src\\PrivateRoute.tsx":"4","C:\\Users\\Maciej\\Desktop\\front\\src\\router.tsx":"5","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\lists\\CompanyList.tsx":"6","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\forms\\LoginForm.tsx":"7","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\forms\\RegisterForm.tsx":"8","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\other\\Spinner.tsx":"9","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\NotFoundPage.tsx":"10","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\Home.tsx":"11","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\AccountActivated.tsx":"12","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\Register.tsx":"13","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\Login.tsx":"14","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\RegisterConfirm.tsx":"15","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\Dashboard.tsx":"16","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\AddNewOffer.tsx":"17","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\jobOffers\\OfferDetails.tsx":"18","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\CompleteProfile.tsx":"19","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\jobOffers\\SingleOffer.tsx":"20","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\CompanyProfileDetails.tsx":"21","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\PublicProfile.tsx":"22","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\CompanyProfiles.tsx":"23","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\layout\\Layout.tsx":"24","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\layout\\TopHeader.tsx":"25","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\JobOffer.tsx":"26","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\JobOfferList.tsx":"27","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\NewOfferForm.tsx":"28","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\UpdateOfferForm.tsx":"29","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\CompanyProfileForm.tsx":"30","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\UpdateProfileForm.tsx":"31","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\userInfo\\UserInfo.tsx":"32","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\profile\\ProfileData.tsx":"33","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\tables\\DashboardOfferList.tsx":"34","C:\\Users\\Maciej\\Desktop\\front\\src\\hooks\\useQuery.tsx":"35"},{"size":151,"mtime":1611766246226,"results":"36","hashOfConfig":"37"},{"size":511,"mtime":1612376914716,"results":"38","hashOfConfig":"37"},{"size":2651,"mtime":1612386054621,"results":"39","hashOfConfig":"37"},{"size":407,"mtime":1612172965048,"results":"40","hashOfConfig":"37"},{"size":2272,"mtime":1612374444872,"results":"41","hashOfConfig":"37"},{"size":2166,"mtime":1612382426057,"results":"42","hashOfConfig":"37"},{"size":1656,"mtime":1612386054623,"results":"43","hashOfConfig":"37"},{"size":1754,"mtime":1612386054628,"results":"44","hashOfConfig":"37"},{"size":236,"mtime":1612373976035,"results":"45","hashOfConfig":"37"},{"size":264,"mtime":1612376914773,"results":"46","hashOfConfig":"37"},{"size":1366,"mtime":1612385360408,"results":"47","hashOfConfig":"37"},{"size":1229,"mtime":1612385925223,"results":"48","hashOfConfig":"37"},{"size":487,"mtime":1612376914821,"results":"49","hashOfConfig":"37"},{"size":384,"mtime":1612376911470,"results":"50","hashOfConfig":"37"},{"size":470,"mtime":1612376911471,"results":"51","hashOfConfig":"37"},{"size":3143,"mtime":1612385360408,"results":"52","hashOfConfig":"37"},{"size":466,"mtime":1612377598088,"results":"53","hashOfConfig":"37"},{"size":934,"mtime":1612386054621,"results":"54","hashOfConfig":"37"},{"size":725,"mtime":1612377850914,"results":"55","hashOfConfig":"37"},{"size":832,"mtime":1612386693516,"results":"56","hashOfConfig":"37"},{"size":832,"mtime":1612385360451,"results":"57","hashOfConfig":"37"},{"size":382,"mtime":1612377598152,"results":"58","hashOfConfig":"37"},{"size":1247,"mtime":1612385360451,"results":"59","hashOfConfig":"37"},{"size":970,"mtime":1612376836194,"results":"60","hashOfConfig":"37"},{"size":1582,"mtime":1612376604961,"results":"61","hashOfConfig":"37"},{"size":2933,"mtime":1612386652082,"results":"62","hashOfConfig":"37"},{"size":3197,"mtime":1612379544363,"results":"63","hashOfConfig":"37"},{"size":2957,"mtime":1612386054621,"results":"64","hashOfConfig":"37"},{"size":1990,"mtime":1612386054621,"results":"65","hashOfConfig":"37"},{"size":2316,"mtime":1612386638734,"results":"66","hashOfConfig":"37"},{"size":2725,"mtime":1612377850915,"results":"67","hashOfConfig":"37"},{"size":1411,"mtime":1612382364410,"results":"68","hashOfConfig":"37"},{"size":1103,"mtime":1612379524241,"results":"69","hashOfConfig":"37"},{"size":2681,"mtime":1612385476449,"results":"70","hashOfConfig":"37"},{"size":935,"mtime":1612386690223,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"wlm3l3",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Maciej\\Desktop\\front\\src\\index.tsx",[],["154","155"],"C:\\Users\\Maciej\\Desktop\\front\\src\\app.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\context\\UserContext.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\PrivateRoute.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\router.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\lists\\CompanyList.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\forms\\LoginForm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\forms\\RegisterForm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\other\\Spinner.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\NotFoundPage.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\Home.tsx",["156"],"import { Col, Pagination, Row, Typography } from 'antd';\r\nimport { useState } from 'react';\r\nimport JobOfferList from '../../components/joboffers/JobOfferList';\r\nimport Spinner from '../../components/other/Spinner';\r\nimport useQuery from '../../hooks/useQuery';\r\nimport { IDashboardOffer } from '../../types/productTypes';\r\n\r\ninterface IData {\r\n    offerList: IDashboardOffer[];\r\n    totalCount: number;\r\n}\r\nconst Home = () => {\r\n    const [url, setUrl] = useState<string>(`/offer?page=1&limit=5`);\r\n    const { data, loading, statusCode } = useQuery({ url });\r\n    const { offerList, totalCount }: IData = data;\r\n\r\n    const handlePaginationChange = (pageNumber: number, pageSize?: number): void => {\r\n        setUrl(`/offer?page=${pageNumber}&limit=${pageSize}`);\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={{ span: 22, offset: 1 }} md={{ span: 16, offset: 4 }}>\r\n                <Typography.Title level={1}>Lista Ofert</Typography.Title>\r\n                {loading ? <Spinner /> : <JobOfferList offerList={offerList} />}\r\n                <Pagination\r\n                    style={{ display: 'flex', justifyContent: 'center' }}\r\n                    pageSize={5}\r\n                    total={totalCount}\r\n                    onChange={handlePaginationChange}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\AccountActivated.tsx",["157","158","159","160","161"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, message, Row, Typography } from 'antd';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Spinner from '../../components/other/Spinner';\r\nimport useQuery from '../../hooks/useQuery';\r\n\r\ninterface IData {\r\n    user: any;\r\n}\r\n\r\nconst AccountActivated = () => {\r\n    const { token }: any = useParams();\r\n    const { data, loading, statusCode } = useQuery({ url: `/user/active/${token}` });\r\n    const { user }: IData = data;\r\n\r\n    const renderView = () => {\r\n        if (loading) return <Spinner />;\r\n        if (!user) return <Typography.Title level={2}>Coś poszło nie tak</Typography.Title>;\r\n\r\n        return (\r\n            <>\r\n                <Typography.Title level={2}>Konto zostało aktywowane</Typography.Title>\r\n                <Link to='/login'>\r\n                    <Button type='primary' size='large'>\r\n                        Przejdź do logowania\r\n                    </Button>\r\n                </Link>\r\n            </>\r\n        );\r\n    };\r\n    return (\r\n        <Row>\r\n            <Col md={{ span: 8, offset: 8 }}>{renderView()}</Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default AccountActivated;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\Register.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\Login.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\RegisterConfirm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\Dashboard.tsx",["162","163","164","165","166","167","168","169"],"import { Button, Col, Empty, Row, Space, Typography } from 'antd';\r\nimport { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DashboardOfferList from '../../components/dashboad/tables/DashboardOfferList';\r\nimport Spinner from '../../components/other/Spinner';\r\nimport ProfileData from '../../components/dashboad/profile/ProfileData';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { IDashboardOffer } from '../../types/productTypes';\r\nimport { IUserDetails } from '../../types/userTypes';\r\nimport useQuery from '../../hooks/useQuery';\r\n\r\ninterface IData {\r\n    offerList: IDashboardOffer[];\r\n}\r\ninterface IUser {\r\n    user: IUserDetails;\r\n}\r\n\r\nconst Dashboard = () => {\r\n    const { user: contextUser } = useContext(UserContext);\r\n    const { data, loading: offersLoading, statusCode } = useQuery({ url: `/offer?userId=${contextUser?.userId}` });\r\n    const { data: userData, loading: userLoading, statusCode: userStatusCode } = useQuery({ url: `/user/current` });\r\n    const { offerList }: IData = data;\r\n    const { user }: IUser = userData;\r\n\r\n    if (!user) return <div />;\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={{ span: 16, offset: 4 }}>\r\n                    <ProfileData data={user} />\r\n                    {!user.companyPublicProfile && (\r\n                        <Button type='primary'>\r\n                            <Link to='/dashboard/profilpubliczny'>Dodaj profil publiczny</Link>\r\n                        </Button>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n\r\n            {userLoading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Row>\r\n                    <Col md={{ span: 16, offset: 4 }}>\r\n                        <Typography.Title level={2}>Profil publiczny</Typography.Title>\r\n                        <Button type='primary'>\r\n                            <Link to='#'>Edytuj profil</Link>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n\r\n            <Row>\r\n                <Col md={{ span: 16, offset: 4 }}>\r\n                    <Space direction='horizontal' align='baseline'>\r\n                        <Typography.Title level={2}>Moje oferty</Typography.Title>\r\n                        <Button type='primary'>\r\n                            <Link to='/dashboard/dodajoferte'>Dodaj nową ofertę</Link>\r\n                        </Button>\r\n                    </Space>\r\n                    <div>\r\n                        {offersLoading ? (\r\n                            <Spinner />\r\n                        ) : (\r\n                            <>\r\n                                {offerList && offerList?.length === 0 ? (\r\n                                    <Empty description='Brak dodanych ofert' />\r\n                                ) : (\r\n                                    <DashboardOfferList offerList={offerList} />\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\AddNewOffer.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\jobOffers\\OfferDetails.tsx",["170","171","172"],"import { Col, message, PageHeader, Row } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport UpdateOfferForm from '../../../components/forms/UpdateOfferForm';\r\nimport Spinner from '../../../components/other/Spinner';\r\n\r\nconst OfferDetails = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [offer, setOffer]: any = useState({});\r\n    const params: any = useParams();\r\n\r\n    const getOffer = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const data = await axios.get(`/offer/${params?.id}`).then((result) => result.data);\r\n            setOffer(data.offer);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            setLoading(false);\r\n            console.log('err', err);\r\n            message.error('Coś poszło nie tak');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getOffer();\r\n    }, []);\r\n\r\n    return (\r\n        <Row style={{ marginTop: '2rem' }}>\r\n            <Col md={{ span: 16, offset: 4 }}>\r\n                <PageHeader onBack={() => window.history.back()} title='Twoja oferta' />\r\n\r\n                {loading ? <Spinner /> : <UpdateOfferForm offer={offer} />}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default OfferDetails;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\CompleteProfile.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\jobOffers\\SingleOffer.tsx",["173","174","175","176","177"],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\CompanyProfileDetails.tsx",["178","179","180","181","182"],"import { Col, Row } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Spinner from '../../../components/other/Spinner';\r\nimport UserInfo from '../../../components/dashboad/userInfo/UserInfo';\r\nimport useQuery from '../../../hooks/useQuery';\r\n\r\ninterface IData {\r\n    companyProfile: any;\r\n}\r\n\r\nconst CompanyProfileDetails = () => {\r\n    const { profileId }: any = useParams();\r\n    const [url, setUrl] = useState<string>(`/companyProfile/${profileId}`);\r\n    const { data, loading, statusCode } = useQuery({ url });\r\n    const { companyProfile }: IData = data;\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={{ span: 16, offset: 4 }}>{loading ? <Spinner /> : <UserInfo profile={companyProfile} />}</Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CompanyProfileDetails;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\PublicProfile.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\CompanyProfiles.tsx",["183","184","185","186"],"import { Col, Pagination, Row, Typography } from 'antd';\r\nimport { useState } from 'react';\r\nimport CompanyList from '../../../components/lists/CompanyList';\r\nimport Spinner from '../../../components/other/Spinner';\r\nimport useQuery from '../../../hooks/useQuery';\r\nimport { IUserDetails } from '../../../types/userTypes';\r\n\r\ninterface IData {\r\n    companyProfiles: IUserDetails[];\r\n    totalCount: number;\r\n}\r\n\r\nconst CompanyProfiles = () => {\r\n    const [url, setUrl] = useState<string>(`/companyProfile`);\r\n    const { data, loading, statusCode } = useQuery({ url });\r\n    const { companyProfiles, totalCount }: IData = data;\r\n\r\n    const handlePaginationChange = (pageNumber: number, pageSize?: number) => {\r\n        setUrl(`/companyProfile?page=${pageNumber}&limit=${pageSize}`);\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={{ span: 16, offset: 4 }}>\r\n                <Typography.Title level={1}>Profile pracodawców</Typography.Title>\r\n                {loading ? <Spinner /> : <CompanyList companyList={companyProfiles} />}\r\n                <Pagination defaultCurrent={1} pageSize={5} total={totalCount} onChange={handlePaginationChange} />\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CompanyProfiles;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\layout\\Layout.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\layout\\TopHeader.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\JobOffer.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\JobOfferList.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\NewOfferForm.tsx",["187","188"],"import React, { useContext, useState } from 'react';\r\nimport { Form, Input, Button, message, Select } from 'antd';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../../../context/UserContext';\r\n\r\nconst NewOfferForm = () => {\r\n    const history = useHistory();\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onFinish = async (values: any) => {\r\n        setLoading(true);\r\n        try {\r\n            await axios\r\n                .post(`/offer/`, {\r\n                    ...values,\r\n                })\r\n                .then((response) => response.data);\r\n            setLoading(false);\r\n            form.resetFields();\r\n            message.success('Udało się stworzyć ofertę');\r\n            history.push('/dashboard');\r\n        } catch (err) {\r\n            message.error('Coś się nie udało');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form name='basic' form={form} layout='vertical' initialValues={{ remember: true }} onFinish={onFinish}>\r\n            <Form.Item\r\n                label='Stanowisko'\r\n                name='jobTitle'\r\n                rules={[{ required: true, message: 'Proszę wpisać stanowisko', type: 'string' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label='Opis' name='jobDescription' rules={[{ required: true }]}>\r\n                <Input.TextArea />\r\n            </Form.Item>\r\n\r\n            <Form.Item label='Pensja od' name='pensionFrom' rules={[{ required: true }]}>\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label='Pensja do' name='pensionTo' rules={[{ required: true }]}>\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label='Narzędzia wykorzystywane na stanowisku'\r\n                name='skillsInCompany'\r\n                rules={[{ required: true }]}\r\n            >\r\n                <Select mode='tags' placeholder='React, TypeScript, Scrum...' style={{ width: '100%' }}>\r\n                    <Select.Option key={1} value={'JavaScript'}>\r\n                        {'JavaScript'}\r\n                    </Select.Option>\r\n                    <Select.Option key={2} value={'React'}>\r\n                        {'React'}\r\n                    </Select.Option>\r\n                    <Select.Option key={3} value={'TypeScript'}>\r\n                        {'TypeScript'}\r\n                    </Select.Option>\r\n                    <Select.Option key={4} value={'Node'}>\r\n                        {'Node'}\r\n                    </Select.Option>\r\n                </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type='primary' htmlType='submit' loading={loading}>\r\n                    Stwórz ofertę\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default NewOfferForm;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\UpdateOfferForm.tsx",["189"],"import { Button, Form, Input, message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useContext, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { UserContext } from '../../../context/UserContext';\r\n\r\ninterface IUpdateOfferForm {\r\n    offer: any;\r\n}\r\n\r\nconst UpdateOfferForm = ({ offer }: IUpdateOfferForm) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n    const params: any = useParams();\r\n\r\n    const onFinish = async (values: any) => {\r\n        setLoading(true);\r\n        try {\r\n            const { title, description } = values;\r\n\r\n            await axios.put(`/offer/${params?.id}`, {\r\n                title,\r\n                description,\r\n            });\r\n            setLoading(false);\r\n            message.success('Udało się zaktualizować ofertę');\r\n        } catch (err) {\r\n            message.error('Coś się nie udało');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name='basic'\r\n            form={form}\r\n            initialValues={{\r\n                ...offer,\r\n            }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                label='Stanowisko'\r\n                name='title'\r\n                rules={[{ required: true, message: 'Proszę wpisać stanowisko', type: 'string' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label='Opis stanowiska'\r\n                name='description'\r\n                rules={[{ required: true, message: 'Proszę napisać opis stanowiska!', type: 'string' }]}\r\n            >\r\n                <Input.TextArea />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type='primary' htmlType='submit' loading={loading}>\r\n                    Aktualizuj ofertę\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default UpdateOfferForm;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\CompanyProfileForm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\UpdateProfileForm.tsx",["190"],"import { Form, Input, Button, Select, message } from 'antd';\r\nimport axios from 'axios';\r\nimport { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../../../context/UserContext';\r\n\r\nconst { Option } = Select;\r\n\r\nconst UpdateProfileForm = () => {\r\n    const [form] = Form.useForm();\r\n    const { user } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const updateProfile = async (data: any) => {\r\n        try {\r\n            const updatedUser = await axios\r\n                .put(`/user/${user?.userId}`, {\r\n                    ...data,\r\n                })\r\n                .then((response) => response.data);\r\n\r\n            history.replace('/dashboard');\r\n        } catch (err) {\r\n            console.error('error', err);\r\n            message.error('Coś poszło nie tak');\r\n        }\r\n    };\r\n\r\n    const onFinish = (values: any) => {\r\n        updateProfile(values);\r\n    };\r\n\r\n    return (\r\n        <Form form={form} name='control-hooks' onFinish={onFinish}>\r\n            <Form.Item name='companyName' label='Nazwa firmy' rules={[{ required: true }]}>\r\n                <Input placeholder='Google, Netguru, Sii...' />\r\n            </Form.Item>\r\n            <Form.Item name='companyType' label='Typ firmy' rules={[{ required: true }]}>\r\n                <Select placeholder='Typ firmy'>\r\n                    <Option value='startup'>Startup</Option>\r\n                    <Option value='software_house'>Software House</Option>\r\n                    <Option value='ecommerce'>E-commerce</Option>\r\n                    <Option value='corporation'>Corporation</Option>\r\n                    <Option value='other'>Other</Option>\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item name='location' label='Lokalizacja firmy' rules={[{ required: true }]}>\r\n                <Input placeholder='Warszawa, Kraków...' />\r\n            </Form.Item>\r\n            <Form.Item name='shortDescription' label='Krótki opis firmy' rules={[{ required: true }]}>\r\n                <Input placeholder='Lider w Polsce a nawet na świecie' />\r\n            </Form.Item>\r\n            <Form.Item name='companyURL' label='Adres URL firmy' rules={[{ required: true }]}>\r\n                <Input placeholder='google.com' />\r\n            </Form.Item>\r\n            <Form.Item name='linkedin' label='URL profilu Linkedin'>\r\n                <Input placeholder='linkedin.com/google' />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type='primary' htmlType='submit' size='large'>\r\n                    Aktualizuj profil\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default UpdateProfileForm;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\userInfo\\UserInfo.tsx",["191","192"],"import { PageHeader, Space, Tag, Typography } from 'antd';\r\nimport { FacebookFilled, LinkedinFilled } from '@ant-design/icons';\r\n\r\ninterface IUserInfoProps {\r\n    profile: any;\r\n}\r\nconst UserInfo = ({ profile }: IUserInfoProps) => {\r\n    return (\r\n        <>\r\n            <PageHeader onBack={() => window.history.back()} title='Profil firmy' />\r\n            <Typography.Title level={4}>{profile?.companyName}</Typography.Title>\r\n            <Typography.Paragraph>{profile?.companyDescription}</Typography.Paragraph>\r\n            <Typography.Text type='secondary'>{profile?.createdAt}</Typography.Text>\r\n            <br />\r\n            <br />\r\n\r\n            <Typography.Title level={5}>Używane technologie</Typography.Title>\r\n            {profile?.technologiesUsed?.map((item: any) => (\r\n                <Tag key={item}>{item}</Tag>\r\n            ))}\r\n            <br />\r\n            <br />\r\n            <Space size={10}>\r\n                {profile?.socialMedia?.linkedIn && (\r\n                    <a href='#'>\r\n                        <FacebookFilled style={{ fontSize: '40px' }} />\r\n                    </a>\r\n                )}\r\n                {profile?.socialMedia?.facebook && (\r\n                    <a href='#'>\r\n                        <LinkedinFilled style={{ fontSize: '40px' }} />\r\n                    </a>\r\n                )}\r\n            </Space>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserInfo;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\profile\\ProfileData.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\tables\\DashboardOfferList.tsx",["193","194"],"import { Button, message, Space, Typography } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { UserContext } from '../../../context/UserContext';\r\nimport { IDashboardOffer } from '../../../types/productTypes';\r\n\r\nconst StyledList = styled.ul`\r\n    padding: 0;\r\n    list-style: none;\r\n`;\r\n\r\nconst StyledListItem = styled.li`\r\n    box-shadow: 0px 0px 16px #dddddd;\r\n    border-radius: 15px;\r\n    padding: 15px;\r\n    margin: 1.75rem 0;\r\n`;\r\n\r\ninterface ICompanyListProps {\r\n    offerList: IDashboardOffer[];\r\n}\r\n\r\nconst DashboardOfferList = ({ offerList }: ICompanyListProps) => {\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n\r\n    const handleDeleteOffer = async (id: string) => {\r\n        try {\r\n            setDeleteLoading(true);\r\n            await axios.delete(`/offer/${id}`);\r\n            setDeleteLoading(false);\r\n        } catch (err) {\r\n            setDeleteLoading(false);\r\n            console.log('err', err);\r\n            message.error('Coś poszło nie tak');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledList>\r\n            {offerList.map((item) => {\r\n                return (\r\n                    <StyledListItem key={item._id}>\r\n                        <Space direction='horizontal' size={20} wrap>\r\n                            <Typography.Title level={4}>{item.jobTitle}</Typography.Title>\r\n                            <Typography.Text>{item.owner.email}</Typography.Text>\r\n                        </Space>\r\n\r\n                        <Typography.Paragraph>{item.jobDescription}</Typography.Paragraph>\r\n                        <Typography.Paragraph>\r\n                            Pensja: {item.pensionFrom} - {item.pensionTo} PLN\r\n                        </Typography.Paragraph>\r\n                        <Space direction='horizontal' size={30} wrap>\r\n                            <Button\r\n                                type='primary'\r\n                                danger\r\n                                loading={deleteLoading}\r\n                                onClick={() => handleDeleteOffer(item._id)}\r\n                            >\r\n                                Usuń ofertę\r\n                            </Button>\r\n                            <Button type='primary'>\r\n                                <Link to={`/dashboard/oferta/${item._id}`}>Przejdź do oferty</Link>\r\n                            </Button>\r\n                        </Space>\r\n                    </StyledListItem>\r\n                );\r\n            })}\r\n        </StyledList>\r\n    );\r\n};\r\n\r\nexport default DashboardOfferList;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\hooks\\useQuery.tsx",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":14,"column":28,"nodeType":"201","messageId":"202","endLine":14,"endColumn":38},{"ruleId":"199","severity":1,"message":"203","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":26},{"ruleId":"199","severity":1,"message":"204","line":1,"column":28,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"205","line":2,"column":23,"nodeType":"201","messageId":"202","endLine":2,"endColumn":30},{"ruleId":"199","severity":1,"message":"206","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":13},{"ruleId":"199","severity":1,"message":"200","line":14,"column":28,"nodeType":"201","messageId":"202","endLine":14,"endColumn":38},{"ruleId":"199","severity":1,"message":"205","line":1,"column":30,"nodeType":"201","messageId":"202","endLine":1,"endColumn":37},{"ruleId":"199","severity":1,"message":"207","line":1,"column":51,"nodeType":"201","messageId":"202","endLine":1,"endColumn":55},{"ruleId":"199","severity":1,"message":"206","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":13},{"ruleId":"199","severity":1,"message":"203","line":3,"column":29,"nodeType":"201","messageId":"202","endLine":3,"endColumn":38},{"ruleId":"199","severity":1,"message":"204","line":3,"column":40,"nodeType":"201","messageId":"202","endLine":3,"endColumn":48},{"ruleId":"199","severity":1,"message":"208","line":4,"column":16,"nodeType":"201","messageId":"202","endLine":4,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":22,"column":43,"nodeType":"201","messageId":"202","endLine":22,"endColumn":53},{"ruleId":"199","severity":1,"message":"209","line":23,"column":63,"nodeType":"201","messageId":"202","endLine":23,"endColumn":77},{"ruleId":"199","severity":1,"message":"210","line":3,"column":17,"nodeType":"201","messageId":"202","endLine":3,"endColumn":27},{"ruleId":"199","severity":1,"message":"211","line":7,"column":10,"nodeType":"201","messageId":"202","endLine":7,"endColumn":21},{"ruleId":"212","severity":1,"message":"213","line":29,"column":8,"nodeType":"214","endLine":29,"endColumn":10,"suggestions":"215"},{"ruleId":"199","severity":1,"message":"205","line":1,"column":15,"nodeType":"201","messageId":"202","endLine":1,"endColumn":22},{"ruleId":"199","severity":1,"message":"206","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":13},{"ruleId":"199","severity":1,"message":"203","line":3,"column":17,"nodeType":"201","messageId":"202","endLine":3,"endColumn":26},{"ruleId":"199","severity":1,"message":"204","line":3,"column":28,"nodeType":"201","messageId":"202","endLine":3,"endColumn":36},{"ruleId":"199","severity":1,"message":"200","line":15,"column":28,"nodeType":"201","messageId":"202","endLine":15,"endColumn":38},{"ruleId":"199","severity":1,"message":"205","line":1,"column":15,"nodeType":"201","messageId":"202","endLine":1,"endColumn":22},{"ruleId":"199","severity":1,"message":"206","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":13},{"ruleId":"199","severity":1,"message":"203","line":3,"column":17,"nodeType":"201","messageId":"202","endLine":3,"endColumn":26},{"ruleId":"199","severity":1,"message":"216","line":15,"column":17,"nodeType":"201","messageId":"202","endLine":15,"endColumn":23},{"ruleId":"199","severity":1,"message":"200","line":16,"column":28,"nodeType":"201","messageId":"202","endLine":16,"endColumn":38},{"ruleId":"199","severity":1,"message":"205","line":1,"column":15,"nodeType":"201","messageId":"202","endLine":1,"endColumn":22},{"ruleId":"199","severity":1,"message":"206","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":13},{"ruleId":"199","severity":1,"message":"203","line":3,"column":17,"nodeType":"201","messageId":"202","endLine":3,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":16,"column":28,"nodeType":"201","messageId":"202","endLine":16,"endColumn":38},{"ruleId":"199","severity":1,"message":"210","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":27},{"ruleId":"199","severity":1,"message":"211","line":5,"column":10,"nodeType":"201","messageId":"202","endLine":5,"endColumn":21},{"ruleId":"199","severity":1,"message":"217","line":12,"column":13,"nodeType":"201","messageId":"202","endLine":12,"endColumn":17},{"ruleId":"199","severity":1,"message":"218","line":16,"column":19,"nodeType":"201","messageId":"202","endLine":16,"endColumn":30},{"ruleId":"219","severity":1,"message":"220","line":25,"column":21,"nodeType":"221","endLine":25,"endColumn":33},{"ruleId":"219","severity":1,"message":"220","line":30,"column":21,"nodeType":"221","endLine":30,"endColumn":33},{"ruleId":"199","severity":1,"message":"210","line":3,"column":17,"nodeType":"201","messageId":"202","endLine":3,"endColumn":27},{"ruleId":"199","severity":1,"message":"211","line":6,"column":10,"nodeType":"201","messageId":"202","endLine":6,"endColumn":21},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"@typescript-eslint/no-unused-vars","'statusCode' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'message' is defined but never used.","'axios' is defined but never used.","'Spin' is defined but never used.","'useHistory' is defined but never used.","'userStatusCode' is assigned a value but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getOffer'. Either include it or remove the dependency array.","ArrayExpression",["224"],"'setUrl' is assigned a value but never used.","'user' is assigned a value but never used.","'updatedUser' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},"Update the dependencies array to be: [getOffer]",{"range":"227","text":"228"},[1025,1027],"[getOffer]"]