[{"C:\\Users\\Maciej\\Desktop\\front\\src\\index.tsx":"1","C:\\Users\\Maciej\\Desktop\\front\\src\\app.tsx":"2","C:\\Users\\Maciej\\Desktop\\front\\src\\context\\UserContext.tsx":"3","C:\\Users\\Maciej\\Desktop\\front\\src\\PrivateRoute.tsx":"4","C:\\Users\\Maciej\\Desktop\\front\\src\\router.tsx":"5","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\lists\\CompanyList.tsx":"6","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\forms\\LoginForm.tsx":"7","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\forms\\RegisterForm.tsx":"8","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\other\\Spinner.tsx":"9","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\NotFoundPage.tsx":"10","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\Home.tsx":"11","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\AccountActivated.tsx":"12","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\Register.tsx":"13","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\Login.tsx":"14","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\RegisterConfirm.tsx":"15","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\Dashboard.tsx":"16","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\AddNewOffer.tsx":"17","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\jobOffers\\OfferDetails.tsx":"18","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\CompleteProfile.tsx":"19","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\jobOffers\\SingleOffer.tsx":"20","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\CompanyProfileDetails.tsx":"21","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\PublicProfile.tsx":"22","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\CompanyProfiles.tsx":"23","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\layout\\Layout.tsx":"24","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\layout\\TopHeader.tsx":"25","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\JobOffer.tsx":"26","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\JobOfferList.tsx":"27","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\NewOfferForm.tsx":"28","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\UpdateOfferForm.tsx":"29","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\CompanyProfileForm.tsx":"30","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\UpdateProfileForm.tsx":"31","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\userInfo\\UserInfo.tsx":"32","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\profile\\ProfileData.tsx":"33","C:\\Users\\Maciej\\Desktop\\front\\src\\hooks\\useQuery.tsx":"34","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\other\\Notification.tsx":"35","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\tables\\DashboardOfferTable.tsx":"36","C:\\Users\\Maciej\\Desktop\\front\\src\\hooks\\createQueryString.tsx":"37"},{"size":174,"mtime":1612553877728,"results":"38","hashOfConfig":"39"},{"size":546,"mtime":1612553876052,"results":"40","hashOfConfig":"39"},{"size":3905,"mtime":1612553665136,"results":"41","hashOfConfig":"39"},{"size":407,"mtime":1612172965048,"results":"42","hashOfConfig":"39"},{"size":2272,"mtime":1612374444872,"results":"43","hashOfConfig":"39"},{"size":2166,"mtime":1612382426057,"results":"44","hashOfConfig":"39"},{"size":1982,"mtime":1612535771419,"results":"45","hashOfConfig":"39"},{"size":2184,"mtime":1612535311979,"results":"46","hashOfConfig":"39"},{"size":236,"mtime":1612373976035,"results":"47","hashOfConfig":"39"},{"size":264,"mtime":1612376914773,"results":"48","hashOfConfig":"39"},{"size":1366,"mtime":1612385360408,"results":"49","hashOfConfig":"39"},{"size":1229,"mtime":1612385925223,"results":"50","hashOfConfig":"39"},{"size":487,"mtime":1612376914821,"results":"51","hashOfConfig":"39"},{"size":470,"mtime":1612535058981,"results":"52","hashOfConfig":"39"},{"size":470,"mtime":1612376911471,"results":"53","hashOfConfig":"39"},{"size":3743,"mtime":1612553524386,"results":"54","hashOfConfig":"39"},{"size":466,"mtime":1612377598088,"results":"55","hashOfConfig":"39"},{"size":934,"mtime":1612386054621,"results":"56","hashOfConfig":"39"},{"size":725,"mtime":1612377850914,"results":"57","hashOfConfig":"39"},{"size":786,"mtime":1612546708329,"results":"58","hashOfConfig":"39"},{"size":832,"mtime":1612385360451,"results":"59","hashOfConfig":"39"},{"size":382,"mtime":1612377598152,"results":"60","hashOfConfig":"39"},{"size":1247,"mtime":1612385360451,"results":"61","hashOfConfig":"39"},{"size":1041,"mtime":1612521908074,"results":"62","hashOfConfig":"39"},{"size":1556,"mtime":1612521865050,"results":"63","hashOfConfig":"39"},{"size":2303,"mtime":1612547106227,"results":"64","hashOfConfig":"39"},{"size":3375,"mtime":1612546787418,"results":"65","hashOfConfig":"39"},{"size":3256,"mtime":1612557573402,"results":"66","hashOfConfig":"39"},{"size":1990,"mtime":1612386054621,"results":"67","hashOfConfig":"39"},{"size":2316,"mtime":1612386638734,"results":"68","hashOfConfig":"39"},{"size":3136,"mtime":1612539837958,"results":"69","hashOfConfig":"39"},{"size":1411,"mtime":1612382364410,"results":"70","hashOfConfig":"39"},{"size":1103,"mtime":1612379524241,"results":"71","hashOfConfig":"39"},{"size":893,"mtime":1612544103526,"results":"72","hashOfConfig":"39"},{"size":198,"mtime":1612523358288,"results":"73","hashOfConfig":"39"},{"size":3910,"mtime":1612544108159,"results":"74","hashOfConfig":"39"},{"size":220,"mtime":1612545138598,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"wlm3l3",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\Maciej\\Desktop\\front\\src\\index.tsx",[],["164","165"],"C:\\Users\\Maciej\\Desktop\\front\\src\\app.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\context\\UserContext.tsx",["166","167"],"import { FunctionComponent, useEffect, useState, createContext, Dispatch, SetStateAction } from 'react';\r\nimport { notification } from 'antd';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport jwt from 'jsonwebtoken';\r\nimport { IUser } from '../types/userTypes';\r\n\r\ninterface IUserContext {\r\n    loadingUser: boolean;\r\n    user?: IUser;\r\n    login: ({ email, password, roleName }: { email: string; password: string; roleName: string }) => void;\r\n    logout: () => void;\r\n    setNewUser: Dispatch<SetStateAction<IUser | undefined>>;\r\n}\r\n\r\nconst initialState = {\r\n    loadingUser: true,\r\n    login: () => {},\r\n    logout: () => {},\r\n    setNewUser: () => {},\r\n};\r\n\r\nconst UserContext = createContext<IUserContext>(initialState);\r\n\r\nconst UserProvider: FunctionComponent = ({ children }) => {\r\n    const history = useHistory();\r\n    const [loadingUser, setLoadingUser] = useState(true);\r\n    const [user, setUser] = useState<IUser | undefined>(undefined);\r\n\r\n    const refreshToken = async (token: string) => {\r\n        try {\r\n            const userData: any = jwt.verify(token, process.env.REACT_APP_JWT_KEY!);\r\n            if (Date.now() + 1000 * 60 * 10 > userData.exp) {\r\n                const { token } = await axios.post('/user/refreshtoken').then((res) => res.data);\r\n                const userData = jwt.verify(token, process.env.REACT_APP_JWT_KEY!);\r\n                const { email: userEmail, userId, location } = userData as IUser;\r\n                setUser({ email: userEmail, token, userId, location });\r\n                Cookies.set('token', token);\r\n            }\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            logout();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = Cookies.get('token') as string;\r\n        if (token) {\r\n            try {\r\n                const userData = jwt.verify(token, process.env.REACT_APP_JWT_KEY!);\r\n                const { email, userId, location } = userData as IUser;\r\n                setUser({ email, token, userId, location });\r\n                setLoadingUser(false);\r\n            } catch (err) {\r\n                if (err.response?.data?.message === 'jwt expired') {\r\n                    notification.error({\r\n                        message: 'Token expired',\r\n                        description: 'Try logging again',\r\n                        placement: 'bottomRight',\r\n                    });\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Something went wrong with token',\r\n                        description: 'Try logging again',\r\n                        placement: 'bottomRight',\r\n                    });\r\n                }\r\n\r\n                logout();\r\n            }\r\n        }\r\n        setLoadingUser(false);\r\n    }, []);\r\n\r\n    const login = async ({ email, password, roleName }: any): Promise<any> => {\r\n        try {\r\n            const { token } = await axios\r\n                .post(`/user/login`, {\r\n                    email,\r\n                    password,\r\n                    roleName,\r\n                })\r\n                .then((response) => response.data);\r\n\r\n            const userData = jwt.verify(token, process.env.REACT_APP_JWT_KEY!);\r\n            const { email: userEmail, userId, location } = userData as IUser;\r\n            setUser({ email: userEmail, token, userId, location });\r\n            Cookies.set('token', token);\r\n            return;\r\n        } catch (err) {\r\n            return err;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        Cookies.remove('token');\r\n        setUser(undefined);\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, loadingUser, login, logout, setNewUser: setUser }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nexport { UserContext, UserProvider };\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\PrivateRoute.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\router.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\lists\\CompanyList.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\forms\\LoginForm.tsx",["168","169","170"],"import React, { useContext, useState } from 'react';\r\nimport { Form, Input, Button, Checkbox, Typography, message, Alert } from 'antd';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LoginForm = () => {\r\n    const history = useHistory();\r\n    const { login } = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const onFinish = async (values: any) => {\r\n        setLoading(true);\r\n        const { email, password } = values;\r\n\r\n        // TODO: find some more elegant way of handling it\r\n        const error: any = await login({ email, password, roleName: 'COMPANY' });\r\n        if (error) {\r\n            setError(error.response.data.errors[0].message);\r\n        }\r\n        history.push('/dashboard');\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <Form layout='vertical' onFinish={onFinish}>\r\n            <Form.Item label='Email' name='email' rules={[{ required: true, message: 'This field cannot be empty!' }]}>\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label='Password'\r\n                name='password'\r\n                rules={[{ required: true, message: 'This field cannot be empty!' }]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            {error && (\r\n                <Alert\r\n                    message='Something went wrong!'\r\n                    description={error}\r\n                    type='error'\r\n                    closable\r\n                    style={{ margin: '15px 0 20px' }}\r\n                    onClose={() => setError('')}\r\n                />\r\n            )}\r\n\r\n            <Form.Item>\r\n                <Button type='primary' htmlType='submit' loading={loading}>\r\n                    Zaloguj\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\forms\\RegisterForm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\other\\Spinner.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\NotFoundPage.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\Home.tsx",["171"],"import { Col, Pagination, Row, Typography } from 'antd';\r\nimport { useState } from 'react';\r\nimport JobOfferList from '../../components/joboffers/JobOfferList';\r\nimport Spinner from '../../components/other/Spinner';\r\nimport useQuery from '../../hooks/useQuery';\r\nimport { IDashboardOffer } from '../../types/productTypes';\r\n\r\ninterface IData {\r\n    offerList: IDashboardOffer[];\r\n    totalCount: number;\r\n}\r\nconst Home = () => {\r\n    const [url, setUrl] = useState<string>(`/offer?page=1&limit=5`);\r\n    const { data, loading, statusCode } = useQuery({ url });\r\n    const { offerList, totalCount }: IData = data;\r\n\r\n    const handlePaginationChange = (pageNumber: number, pageSize?: number): void => {\r\n        setUrl(`/offer?page=${pageNumber}&limit=${pageSize}`);\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={{ span: 22, offset: 1 }} md={{ span: 16, offset: 4 }}>\r\n                <Typography.Title level={1}>Lista Ofert</Typography.Title>\r\n                {loading ? <Spinner /> : <JobOfferList offerList={offerList} />}\r\n                <Pagination\r\n                    style={{ display: 'flex', justifyContent: 'center' }}\r\n                    pageSize={5}\r\n                    total={totalCount}\r\n                    onChange={handlePaginationChange}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\AccountActivated.tsx",["172","173","174","175","176"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, message, Row, Typography } from 'antd';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Spinner from '../../components/other/Spinner';\r\nimport useQuery from '../../hooks/useQuery';\r\n\r\ninterface IData {\r\n    user: any;\r\n}\r\n\r\nconst AccountActivated = () => {\r\n    const { token }: any = useParams();\r\n    const { data, loading, statusCode } = useQuery({ url: `/user/active/${token}` });\r\n    const { user }: IData = data;\r\n\r\n    const renderView = () => {\r\n        if (loading) return <Spinner />;\r\n        if (!user) return <Typography.Title level={2}>Coś poszło nie tak</Typography.Title>;\r\n\r\n        return (\r\n            <>\r\n                <Typography.Title level={2}>Konto zostało aktywowane</Typography.Title>\r\n                <Link to='/login'>\r\n                    <Button type='primary' size='large'>\r\n                        Przejdź do logowania\r\n                    </Button>\r\n                </Link>\r\n            </>\r\n        );\r\n    };\r\n    return (\r\n        <Row>\r\n            <Col md={{ span: 8, offset: 8 }}>{renderView()}</Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default AccountActivated;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\Register.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\Login.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\auth\\RegisterConfirm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\Dashboard.tsx",["177","178","179","180"],"import { Button, Col, Empty, Row, Space, Typography } from 'antd';\r\nimport { useContext, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport DashboardOfferTable from '../../components/dashboad/tables/DashboardOfferTable';\r\nimport Spinner from '../../components/other/Spinner';\r\nimport ProfileData from '../../components/dashboad/profile/ProfileData';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { IDashboardOffer } from '../../types/productTypes';\r\nimport { IUserDetails } from '../../types/userTypes';\r\nimport useQuery from '../../hooks/useQuery';\r\nimport { createQueryString } from '../../hooks/createQueryString';\r\n\r\ninterface IData {\r\n    offerList: IDashboardOffer[];\r\n}\r\ninterface IUser {\r\n    user: IUserDetails;\r\n}\r\n\r\nconst Dashboard = () => {\r\n    const history = useHistory();\r\n    const queryString = createQueryString({ page: 1, limit: 10 });\r\n    const { user: contextUser } = useContext(UserContext);\r\n    const { data, loading: offersLoading, statusCode } = useQuery({\r\n        url: `/offer?userId=${contextUser?.userId}&${queryString}`,\r\n    });\r\n    const { data: userData, loading: userLoading, statusCode: userStatusCode } = useQuery({ url: `/user/current` });\r\n    const { offerList }: IData = data;\r\n    const { user }: IUser = userData;\r\n    useEffect(() => {\r\n        if (!contextUser?.location) {\r\n            history.push('/dashboard/completeyourprofile');\r\n        }\r\n    }, [contextUser]);\r\n\r\n    if (!contextUser) return <div />;\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ margin: '20px 0' }}>\r\n                <Col sm={{ span: 24, offset: 0 }} md={{ span: 22, offset: 1 }} lg={{ span: 20, offset: 2 }}>\r\n                    <ProfileData data={user} />\r\n                    {/* {!user.companyPublicProfile && (\r\n                        <Button type='primary'>\r\n                            <Link to='/dashboard/profilpubliczny'>Dodaj profil publiczny</Link>\r\n                        </Button>\r\n                    )} */}\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* {userLoading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Row style={{ margin: '20px 0' }}>\r\n                    <Col md={{ span: 16, offset: 4 }}>\r\n                        <Typography.Title level={2}>Profil publiczny</Typography.Title>\r\n                        <Button type='primary'>\r\n                            <Link to='#'>Edytuj profil</Link>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            )} */}\r\n\r\n            <Row style={{ margin: '40px 0' }}>\r\n                <Col sm={{ span: 24, offset: 0 }} md={{ span: 22, offset: 1 }} lg={{ span: 20, offset: 2 }}>\r\n                    <Space direction='horizontal' align='baseline'>\r\n                        <Typography.Title level={2}>Moje oferty</Typography.Title>\r\n                        <Button type='default'>\r\n                            <Link to='/dashboard/dodajoferte'>Dodaj nową ofertę</Link>\r\n                        </Button>\r\n                    </Space>\r\n                    <div>\r\n                        {offersLoading ? (\r\n                            <Spinner />\r\n                        ) : (\r\n                            <>\r\n                                {offerList?.length === 0 ? (\r\n                                    <Empty description='Brak dodanych ofert' />\r\n                                ) : (\r\n                                    <DashboardOfferTable offerList={offerList} />\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\AddNewOffer.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\jobOffers\\OfferDetails.tsx",["181","182","183"],"import { Col, message, PageHeader, Row } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport UpdateOfferForm from '../../../components/forms/UpdateOfferForm';\r\nimport Spinner from '../../../components/other/Spinner';\r\n\r\nconst OfferDetails = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [offer, setOffer]: any = useState({});\r\n    const params: any = useParams();\r\n\r\n    const getOffer = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const data = await axios.get(`/offer/${params?.id}`).then((result) => result.data);\r\n            setOffer(data.offer);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            setLoading(false);\r\n            console.log('err', err);\r\n            message.error('Coś poszło nie tak');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getOffer();\r\n    }, []);\r\n\r\n    return (\r\n        <Row style={{ marginTop: '2rem' }}>\r\n            <Col md={{ span: 16, offset: 4 }}>\r\n                <PageHeader onBack={() => window.history.back()} title='Twoja oferta' />\r\n\r\n                {loading ? <Spinner /> : <UpdateOfferForm offer={offer} />}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default OfferDetails;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\private\\CompleteProfile.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\jobOffers\\SingleOffer.tsx",["184"],"import { Col, Row } from 'antd';\r\nimport { useParams } from 'react-router-dom';\r\nimport JobOffer from '../../../components/joboffers/JobOffer';\r\nimport Spinner from '../../../components/other/Spinner';\r\nimport useQuery from '../../../hooks/useQuery';\r\nimport { IDashboardOffer } from '../../../types/productTypes';\r\n\r\ninterface IData {\r\n    offer: IDashboardOffer;\r\n}\r\n\r\nconst SingleOffer = () => {\r\n    const params: any = useParams();\r\n    const { data, loading, statusCode } = useQuery({ url: `/offer/${params?.id}` });\r\n    const { offer }: IData = data;\r\n\r\n    return (\r\n        <Row style={{ marginTop: '2rem' }}>\r\n            <Col md={{ span: 16, offset: 4 }}>{loading ? <Spinner /> : <JobOffer offer={offer} />}</Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default SingleOffer;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\CompanyProfileDetails.tsx",["185","186","187","188","189"],"import { Col, Row } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Spinner from '../../../components/other/Spinner';\r\nimport UserInfo from '../../../components/dashboad/userInfo/UserInfo';\r\nimport useQuery from '../../../hooks/useQuery';\r\n\r\ninterface IData {\r\n    companyProfile: any;\r\n}\r\n\r\nconst CompanyProfileDetails = () => {\r\n    const { profileId }: any = useParams();\r\n    const [url, setUrl] = useState<string>(`/companyProfile/${profileId}`);\r\n    const { data, loading, statusCode } = useQuery({ url });\r\n    const { companyProfile }: IData = data;\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={{ span: 16, offset: 4 }}>{loading ? <Spinner /> : <UserInfo profile={companyProfile} />}</Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CompanyProfileDetails;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\PublicProfile.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\public\\companyProfiles\\CompanyProfiles.tsx",["190","191","192","193"],"import { Col, Pagination, Row, Typography } from 'antd';\r\nimport { useState } from 'react';\r\nimport CompanyList from '../../../components/lists/CompanyList';\r\nimport Spinner from '../../../components/other/Spinner';\r\nimport useQuery from '../../../hooks/useQuery';\r\nimport { IUserDetails } from '../../../types/userTypes';\r\n\r\ninterface IData {\r\n    companyProfiles: IUserDetails[];\r\n    totalCount: number;\r\n}\r\n\r\nconst CompanyProfiles = () => {\r\n    const [url, setUrl] = useState<string>(`/companyProfile`);\r\n    const { data, loading, statusCode } = useQuery({ url });\r\n    const { companyProfiles, totalCount }: IData = data;\r\n\r\n    const handlePaginationChange = (pageNumber: number, pageSize?: number) => {\r\n        setUrl(`/companyProfile?page=${pageNumber}&limit=${pageSize}`);\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={{ span: 16, offset: 4 }}>\r\n                <Typography.Title level={1}>Profile pracodawców</Typography.Title>\r\n                {loading ? <Spinner /> : <CompanyList companyList={companyProfiles} />}\r\n                <Pagination defaultCurrent={1} pageSize={5} total={totalCount} onChange={handlePaginationChange} />\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CompanyProfiles;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\containers\\layout\\Layout.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\layout\\TopHeader.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\JobOffer.tsx",["194"],"import { Button, Image, PageHeader, Space, Tag, Typography } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { IDashboardOffer } from '../../types/productTypes';\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\ninterface IJobOfferProps {\r\n    offer: IDashboardOffer;\r\n}\r\n\r\nconst JobOffer = ({ offer }: IJobOfferProps) => {\r\n    const handleApply = () => {\r\n        // console.log('Apply');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PageHeader onBack={() => window.history.back()} title={'asd'} />\r\n            <div>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Image\r\n                        src={`https://logo.clearbit.com/${offer.owner.companyUrl}`}\r\n                        style={{ width: '100px', height: '100px' }}\r\n                    />\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        <Title level={3}>{offer.owner.companyName}</Title>\r\n                        <Paragraph>\r\n                            {offer.pensionFrom} - {offer.pensionTo} zł\r\n                        </Paragraph>\r\n                    </div>\r\n                </div>\r\n\r\n                {offer.owner.companyPublicProfile && (\r\n                    <Link to={`/profil/${offer.owner?._id}`}>\r\n                        <Button>Profil pracodawcy</Button>\r\n                    </Link>\r\n                )}\r\n            </div>\r\n            <div>\r\n                <Title level={5}>Wymagane technologie </Title>\r\n                <div>\r\n                    {offer.requiredSkills.map((str) => (\r\n                        <Tag key={str}>{str}</Tag>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ margin: '30px 0' }}>\r\n                <Title level={5}>Opis stanowiska </Title>\r\n                <Paragraph>{offer.jobDescription}</Paragraph>\r\n            </div>\r\n\r\n            <div style={{ margin: '30px 0' }}>\r\n                <Button type='primary' onClick={handleApply}>\r\n                    Aplikuj\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default JobOffer;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\joboffers\\JobOfferList.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\NewOfferForm.tsx",["195","196"],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\UpdateOfferForm.tsx",["197"],"import { Button, Form, Input, message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useContext, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { UserContext } from '../../../context/UserContext';\r\n\r\ninterface IUpdateOfferForm {\r\n    offer: any;\r\n}\r\n\r\nconst UpdateOfferForm = ({ offer }: IUpdateOfferForm) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n    const params: any = useParams();\r\n\r\n    const onFinish = async (values: any) => {\r\n        setLoading(true);\r\n        try {\r\n            const { title, description } = values;\r\n\r\n            await axios.put(`/offer/${params?.id}`, {\r\n                title,\r\n                description,\r\n            });\r\n            setLoading(false);\r\n            message.success('Udało się zaktualizować ofertę');\r\n        } catch (err) {\r\n            message.error('Coś się nie udało');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name='basic'\r\n            form={form}\r\n            initialValues={{\r\n                ...offer,\r\n            }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                label='Stanowisko'\r\n                name='title'\r\n                rules={[{ required: true, message: 'Proszę wpisać stanowisko', type: 'string' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label='Opis stanowiska'\r\n                name='description'\r\n                rules={[{ required: true, message: 'Proszę napisać opis stanowiska!', type: 'string' }]}\r\n            >\r\n                <Input.TextArea />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type='primary' htmlType='submit' loading={loading}>\r\n                    Aktualizuj ofertę\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default UpdateOfferForm;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\CompanyProfileForm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\forms\\UpdateProfileForm.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\userInfo\\UserInfo.tsx",["198","199"],"import { PageHeader, Space, Tag, Typography } from 'antd';\r\nimport { FacebookFilled, LinkedinFilled } from '@ant-design/icons';\r\n\r\ninterface IUserInfoProps {\r\n    profile: any;\r\n}\r\nconst UserInfo = ({ profile }: IUserInfoProps) => {\r\n    return (\r\n        <>\r\n            <PageHeader onBack={() => window.history.back()} title='Profil firmy' />\r\n            <Typography.Title level={4}>{profile?.companyName}</Typography.Title>\r\n            <Typography.Paragraph>{profile?.companyDescription}</Typography.Paragraph>\r\n            <Typography.Text type='secondary'>{profile?.createdAt}</Typography.Text>\r\n            <br />\r\n            <br />\r\n\r\n            <Typography.Title level={5}>Używane technologie</Typography.Title>\r\n            {profile?.technologiesUsed?.map((item: any) => (\r\n                <Tag key={item}>{item}</Tag>\r\n            ))}\r\n            <br />\r\n            <br />\r\n            <Space size={10}>\r\n                {profile?.socialMedia?.linkedIn && (\r\n                    <a href='#'>\r\n                        <FacebookFilled style={{ fontSize: '40px' }} />\r\n                    </a>\r\n                )}\r\n                {profile?.socialMedia?.facebook && (\r\n                    <a href='#'>\r\n                        <LinkedinFilled style={{ fontSize: '40px' }} />\r\n                    </a>\r\n                )}\r\n            </Space>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserInfo;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\profile\\ProfileData.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\hooks\\useQuery.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\other\\Notification.tsx",[],"C:\\Users\\Maciej\\Desktop\\front\\src\\components\\dashboad\\tables\\DashboardOfferTable.tsx",["200","201","202","203"],"import { Button, message, Space, Table, Typography } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { UserContext } from '../../../context/UserContext';\r\nimport { IDashboardOffer } from '../../../types/productTypes';\r\n\r\nconst StyledList = styled.ul`\r\n    padding: 0;\r\n    list-style: none;\r\n`;\r\n\r\nconst StyledListItem = styled.li`\r\n    box-shadow: 0px 0px 16px #dddddd;\r\n    border-radius: 15px;\r\n    padding: 15px;\r\n    margin: 1.75rem 0;\r\n`;\r\n\r\ninterface ICompanyListProps {\r\n    offerList: IDashboardOffer[];\r\n}\r\n\r\nconst DashboardOfferTable = ({ offerList }: ICompanyListProps) => {\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n\r\n    const handleDeleteOffer = async (id: string) => {\r\n        try {\r\n            setDeleteLoading(true);\r\n            await axios.delete(`/offer/${id}`);\r\n            setDeleteLoading(false);\r\n        } catch (err) {\r\n            setDeleteLoading(false);\r\n            message.error('Coś poszło nie tak');\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: '_id',\r\n            key: '_id',\r\n        },\r\n        {\r\n            title: 'Job title',\r\n            dataIndex: 'jobTitle',\r\n            key: 'jobTitle',\r\n        },\r\n        {\r\n            title: 'Pension from',\r\n            dataIndex: 'pensionFrom',\r\n            key: 'pensionFrom',\r\n        },\r\n        {\r\n            title: 'Pension to',\r\n            dataIndex: 'pensionTo',\r\n            key: 'pensionTo',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text: any, record: IDashboardOffer) => {\r\n                return (\r\n                    <Space size='middle'>\r\n                        <Button type='default' loading={deleteLoading}>\r\n                            <Link to={`/dashboard/oferta/${record._id}`}>Update</Link>\r\n                        </Button>\r\n                        <Button danger onClick={() => handleDeleteOffer(record._id)} loading={deleteLoading}>\r\n                            Delete\r\n                        </Button>\r\n                    </Space>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <StyledList>\r\n            <Table dataSource={offerList} columns={columns} rowKey='_id' />\r\n            {/* {offerList.map((item) => {\r\n                return (\r\n                    <StyledListItem key={item._id}>\r\n                        <Space direction='horizontal' size={20} wrap>\r\n                            <Typography.Title level={4}>{item.jobTitle}</Typography.Title>\r\n                            <Typography.Text>{item.owner.email}</Typography.Text>\r\n                        </Space>\r\n\r\n                        <Typography.Paragraph>{item.jobDescription}</Typography.Paragraph>\r\n                        <Typography.Paragraph>\r\n                            Pensja: {item.pensionFrom} - {item.pensionTo} PLN\r\n                        </Typography.Paragraph>\r\n                        <Space direction='horizontal' size={30} wrap>\r\n                            <Button\r\n                                type='primary'\r\n                                danger\r\n                                loading={deleteLoading}\r\n                                onClick={() => handleDeleteOffer(item._id)}\r\n                            >\r\n                                Usuń ofertę\r\n                            </Button>\r\n                            <Button type='primary'>\r\n                                <Link to={`/dashboard/oferta/${item._id}`}>Przejdź do oferty</Link>\r\n                            </Button>\r\n                        </Space>\r\n                    </StyledListItem>\r\n                );\r\n            })} */}\r\n        </StyledList>\r\n    );\r\n};\r\n\r\nexport default DashboardOfferTable;\r\n","C:\\Users\\Maciej\\Desktop\\front\\src\\hooks\\createQueryString.tsx",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":31,"column":11,"nodeType":"210","messageId":"211","endLine":31,"endColumn":23},{"ruleId":"212","severity":1,"message":"213","line":74,"column":8,"nodeType":"214","endLine":74,"endColumn":10,"suggestions":"215"},{"ruleId":"208","severity":1,"message":"216","line":2,"column":31,"nodeType":"210","messageId":"211","endLine":2,"endColumn":39},{"ruleId":"208","severity":1,"message":"217","line":2,"column":41,"nodeType":"210","messageId":"211","endLine":2,"endColumn":51},{"ruleId":"208","severity":1,"message":"218","line":2,"column":53,"nodeType":"210","messageId":"211","endLine":2,"endColumn":60},{"ruleId":"208","severity":1,"message":"219","line":14,"column":28,"nodeType":"210","messageId":"211","endLine":14,"endColumn":38},{"ruleId":"208","severity":1,"message":"220","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":26},{"ruleId":"208","severity":1,"message":"221","line":1,"column":28,"nodeType":"210","messageId":"211","endLine":1,"endColumn":36},{"ruleId":"208","severity":1,"message":"218","line":2,"column":23,"nodeType":"210","messageId":"211","endLine":2,"endColumn":30},{"ruleId":"208","severity":1,"message":"222","line":4,"column":8,"nodeType":"210","messageId":"211","endLine":4,"endColumn":13},{"ruleId":"208","severity":1,"message":"219","line":14,"column":28,"nodeType":"210","messageId":"211","endLine":14,"endColumn":38},{"ruleId":"208","severity":1,"message":"219","line":24,"column":43,"nodeType":"210","messageId":"211","endLine":24,"endColumn":53},{"ruleId":"208","severity":1,"message":"223","line":27,"column":38,"nodeType":"210","messageId":"211","endLine":27,"endColumn":49},{"ruleId":"208","severity":1,"message":"224","line":27,"column":63,"nodeType":"210","messageId":"211","endLine":27,"endColumn":77},{"ruleId":"212","severity":1,"message":"225","line":34,"column":8,"nodeType":"214","endLine":34,"endColumn":21,"suggestions":"226"},{"ruleId":"208","severity":1,"message":"227","line":3,"column":17,"nodeType":"210","messageId":"211","endLine":3,"endColumn":27},{"ruleId":"208","severity":1,"message":"228","line":7,"column":10,"nodeType":"210","messageId":"211","endLine":7,"endColumn":21},{"ruleId":"212","severity":1,"message":"229","line":29,"column":8,"nodeType":"214","endLine":29,"endColumn":10,"suggestions":"230"},{"ruleId":"208","severity":1,"message":"219","line":14,"column":28,"nodeType":"210","messageId":"211","endLine":14,"endColumn":38},{"ruleId":"208","severity":1,"message":"218","line":1,"column":15,"nodeType":"210","messageId":"211","endLine":1,"endColumn":22},{"ruleId":"208","severity":1,"message":"222","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":13},{"ruleId":"208","severity":1,"message":"220","line":3,"column":17,"nodeType":"210","messageId":"211","endLine":3,"endColumn":26},{"ruleId":"208","severity":1,"message":"231","line":15,"column":17,"nodeType":"210","messageId":"211","endLine":15,"endColumn":23},{"ruleId":"208","severity":1,"message":"219","line":16,"column":28,"nodeType":"210","messageId":"211","endLine":16,"endColumn":38},{"ruleId":"208","severity":1,"message":"218","line":1,"column":15,"nodeType":"210","messageId":"211","endLine":1,"endColumn":22},{"ruleId":"208","severity":1,"message":"222","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":13},{"ruleId":"208","severity":1,"message":"220","line":3,"column":17,"nodeType":"210","messageId":"211","endLine":3,"endColumn":26},{"ruleId":"208","severity":1,"message":"219","line":16,"column":28,"nodeType":"210","messageId":"211","endLine":16,"endColumn":38},{"ruleId":"208","severity":1,"message":"232","line":1,"column":37,"nodeType":"210","messageId":"211","endLine":1,"endColumn":42},{"ruleId":"208","severity":1,"message":"227","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":27},{"ruleId":"208","severity":1,"message":"233","line":31,"column":11,"nodeType":"210","messageId":"211","endLine":31,"endColumn":27},{"ruleId":"208","severity":1,"message":"234","line":12,"column":13,"nodeType":"210","messageId":"211","endLine":12,"endColumn":17},{"ruleId":"235","severity":1,"message":"236","line":25,"column":21,"nodeType":"237","endLine":25,"endColumn":33},{"ruleId":"235","severity":1,"message":"236","line":30,"column":21,"nodeType":"237","endLine":30,"endColumn":33},{"ruleId":"208","severity":1,"message":"217","line":1,"column":41,"nodeType":"210","messageId":"211","endLine":1,"endColumn":51},{"ruleId":"208","severity":1,"message":"227","line":3,"column":17,"nodeType":"210","messageId":"211","endLine":3,"endColumn":27},{"ruleId":"208","severity":1,"message":"228","line":6,"column":10,"nodeType":"210","messageId":"211","endLine":6,"endColumn":21},{"ruleId":"208","severity":1,"message":"238","line":14,"column":7,"nodeType":"210","messageId":"211","endLine":14,"endColumn":21},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"@typescript-eslint/no-unused-vars","'refreshToken' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logout'. Either include it or remove the dependency array.","ArrayExpression",["241"],"'Checkbox' is defined but never used.","'Typography' is defined but never used.","'message' is defined but never used.","'statusCode' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'userLoading' is assigned a value but never used.","'userStatusCode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["242"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getOffer'. Either include it or remove the dependency array.",["243"],"'setUrl' is assigned a value but never used.","'Space' is defined but never used.","'handleDescChange' is assigned a value but never used.","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'StyledListItem' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [logout]",{"range":"250","text":"251"},"Update the dependencies array to be: [contextUser, history]",{"range":"252","text":"253"},"Update the dependencies array to be: [getOffer]",{"range":"254","text":"255"},[2839,2841],"[logout]",[1459,1472],"[contextUser, history]",[1025,1027],"[getOffer]"]